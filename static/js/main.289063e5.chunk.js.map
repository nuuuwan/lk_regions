{"version":3,"sources":["constants/ColorConstants.js","constants/Constants.js","base/BaseUtils.js","base/GIG2.js","base/Ents.js","base/RegionGroup.js","stateful/molecules/GeoMap.js","base/TableX.js","stateful/atoms/RegionLabel.js","nonstate/molecules/DataTable.js","nonstate/molecules/MapPropertiesView.js","stateful/molecules/MainPanel.js","base/GeoData.js","stateful/atoms/RegionView.js","nonstate/molecules/DataRowTable.js","stateful/molecules/MultiRegionView.js","nonstate/molecules/MapPanel.js","nonstate/molecules/ColorPanel.js","stateful/pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["COLOR_SL_FLAG","FIELD_NAME_TO_COLOR","SLFP","PA","UPFA","SLPP","UNP","NDF","SJB","JVP","JJB","LSSP","ACTC","ITAK","AITC","TMVP","MNA","SLMC","EPDP","TULF","SLMP","other","others","bharatha","burgher","chetty","indian_tamil","tamil","malay","moor","muslim","sinhalese","sri_lankan_tamil","buddhist","islam","hindu","roman_catholic","other_christian","christian","female","male","son_or_daughter","head","wife_or_husband","grandchild_or_great_grand_child","other_relative","non_relative","son_or_daughter_in_law","parent_of_head_or_spouse","boarder","domestic_employee","clergy","tv","mobile","radio","fixed_tp","pc","laptop","fax","fire_wood","gas","kerosene","electricity","asbestos","tile","metal_sheet","concrete","zink_aluminium_sheet","cement","tile_or_granite_or_terrazo","mud","wood","occupants_burn","occupants_bury","collected_by_local_authorities","occupants_composting_solid_waste","tap_within_unit_main_line","tap_within_premises_but_outside_unit_main_line","tap_outside_premises_main_line","protected_well_within_premises","protected_well_outside_premises","unprotected_well","tube_well","rural_water_projects","river_or_tank_or_stream","bottled_water","single_house_single_floor","single_house_double_floor","single_house_more_than_2_floors","row_house_or_line_room","attached_house_or_annex","twin_house","flat","condominium","hut_or_shanty","owned_by_a_household_member","rent_or_lease_privately_owned","rent_or_lease_government_owned","occupied_free_of_rent","encroached","water_seal_and_connected_to_a_piped_sewer_system","water_seal_and_connected_to_a_septic_tank","pour_flush_toilet_not_water_seal","direct_pit","not_using_a_toilet","electricity_national_electricity_network","solar_power","bio_gas","housing_unit","collective_living_quarter","non_housing_unit","semi_permanent","permanent","improvised","unclassified","married_registered","never_married","widowed","married_customary","separated_not_legally","divorced","legally_separated","cement_block_or_stone","brick","cabook","soil_bricks","plank_or_metal_sheet","cadjan_or_palmyrah","occupied","vacant","APP_NAME","LRU_CACHE","require","DataStructures","keyIDs","asyncFuncKeyToData","Promise","all","map","keyID","a","dataList","reduce","index","iKey","keyToValue","Object","entries","valueToKeys","key","value","push","Humanize","x","toPrecision","xSum","p","StatX","xList","n","length","MathX","sum","mean","Math","sqrt","variance","LRUCache","cacheKey","asyncFallback","hotItemInLRUCache","get","JSON","parse","hotItemInLocalStorage","localStorage","getItem","set","coldItemRaw","coldItem","stringify","setItem","QuotaExceededError","clear","adhocValueKeyToColor","KEY_OTHER","MERGE_ALIAS_MAP","COLOR_INFO_LIST","concat","electionYear","label","tableName","Icon","BallotIcon","PeopleAltIcon","sort","b","localeCompare","TABLE_NAMES","d","DEFAULT_TABLE_NAME","GIG2","url","WWW","tsv","getTable","table","valueKeys","getValueKeys","tableIndex","tableRow","cleanTableRow","includes","parseFloat","isNaN","keys","filter","cellKey","valueKey","maxValueKey","minValueP","maxValueP","sumValue","getSumValues","valueP","min","max","sumValues","Color","getRandomHSLA","getMaxValueKey","getValueKeyColor","sortedValuePs","getValueKeyP","nValues","valuePToRankP","iValue","values","firstRow","getFirstRow","totalRow","sortedNonOtherKeys","otherValueKeys","expandedTableRow","nonOtherKey","otherValueSum","mergedTableRow","mergedKey","mergedTableIndex","regionID","mergeKeysOnTableRow","mergeKeysOnTable","getTotalRow","valueSum","getValueSum","nonOtherValueKeysGlobal","nonOtherValueKeysLocalSet","tableRowValueSum","otherValueKeysLocal","add","Set","nonOtherValueKeys","Array","from","has","expandedTableIndex","expandOtherOnTableRow","getTableIndexIndexNoCache","buildIndex","getTableIndex","ENT","COUNTRY","PROVINCE","DISTRICT","DSD","GND","PD","ED","MOH","LG","UNKNOWN","REGION_TYPES","ENT_TYPE_TO_LONG_NAME","Country","PARENT_TO_CHILD","undefined","Ents","entID","substring","regionType","entType","getEntsByType","ents","entIndex","ent","id","entTypes","getEntIndexByType","entIndexList","allEntIndex","iEnt","getEntType","json","parentType","parentID","childRegionType","StringX","toTitleCase","RegionGroup","mapName","rawInfo","groupToRegions","groupIndex","groupID","name","mapID","regionEnts","groupList","regionEnt","group","regionIDs","getEntTypeLongName","getMapInfoForRegionType","forRegionTypes","getMapInfoForCustomMap","forCustomMaps","assign","activeTableIndex","rawGroupTableIndex","groupTableIndex","groupRow","mergeAndExpandOtherOnTable","GeoMap","this","props","center","zoom","MapContainer","TileLayer","ZoomControl","position","children","Component","TableCellHeader","TableCell","align","width","style","fontWeight","TableCellNumber","isMax","humanizedValue","number","humanizedPercent","percent","backgroundColor","color","opacity","styleText","borderRadius","padding","fontSize","RegionLabel","state","getEnt","setState","renderedName","Box","Typography","variant","sx","toUpperCase","DataTable","activeMapColorTableName","title","split","component","TableContainer","top","bottom","Table","stickyHeader","TableHead","TableRow","TableBody","iRow","dataRow","GroupInfoView","region","pop","PCorrectStats","popList","pCorrect","meanPop","limitLower","limitUpper","nCorrectSizeRegions","nRegions","display","MapPropertiesView","popTableIndex","tableIndexIndex","groupInfoList","parseInt","regionMin","regionMax","groupInfo","stdevPop","stdev","Paper","TAB","MAP_PROPS","DATA","DEFAULT_TAB","MainPanel","activeTab","event","newActiveTab","right","zIndex","TabContext","borderBottom","borderColor","TabList","onChange","onTabChange","bind","tab","Tab","TabPanel","isPointInPolygon","point","polygon","y","nIntersects","i","j","xi","yi","xj","yj","isPointInMultiMultiPolygon","multiMultiPolygon","multiPolygon","GeoData","getCoordinatesForRegion","geoDataList","regionToGeo","iRegion","getRegionTree","regionTree","regionMap","iRegionType","isFoundRegion","isPointInRegion","RegionView","geoJSON","radius","renderedPopup","showDorlingCartogram","renderedCartogram","Circle","pathOptions","mapStyle","fillColor","fillOpacity","weight","GeoJSON","data","onEachFeature","feature","layer","on","click","e","console","debug","DataRowTable","groupTableRow","getValueEntriesSortedByValue","SIMPLIFY_WEIGHT","getRadiusFromPop","getGroupGeoJSONNoCache","type","coordinates","topoJSON","topojsonServer","topojsonSimplify","mergedGeoJSON","topojsonClient","objects","getGroupGeoJSON","join","MultiRegionView","groupGeoJSONList","isComponentMounted","funcGetRegionStyle","funcGetRegionPop","groupIDs","simulation","d3","force","stop","tick","nodes","iGroup","Popup","MapPanel","activeMapID","onClickMap","mapInfoIndex","left","height","List","dense","subheader","ListSubheader","selected","ListItemButton","onClick","ListItemIcon","ListItemText","primary","ColorPanel","onClickMapColor","onClickShowDorlingCartogram","onClickHideDorlingCartogram","overflow","FormGroup","marginLeft","FormControlLabel","control","Switch","checked","target","DEFAULT_LATLNG","DEFAULT_MAP_ID","BORDER_COLOR","HomePage","activeGroupID","updateMap","getMapInfoIndex","getTableIndexIndex","getGroupTableIndex","regionRow","getTableRowColor","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.289063e5.chunk.js","sourcesContent":["export const COLOR_ACTIVE = \"red\";\nexport const COLOR_NOT_ACTIVE = \"white\";\n\nexport const COLOR_SL_FLAG = {\n  SINHALA: \"hsl(355, 63%, 34%)\",\n  TAMIL: \"hsl(21, 100%, 50%)\",\n  MOOR: \"hsl(165, 100%, 17%)\",\n  BUDDHIST: \"hsl(43, 100%, 50%)\",\n};\nexport const FIELD_NAME_TO_COLOR = {\n  // political parties\n  SLFP: \"blue\",\n  PA: \"blue\",\n  UPFA: \"blue\",\n  SLPP: COLOR_SL_FLAG.SINHALA,\n  UNP: \"green\",\n  NDF: \"green\",\n  SJB: \"green\",\n  JVP: \"red\",\n  JJB: \"red\",\n  LSSP: \"red\",\n  ACTC: COLOR_SL_FLAG.TAMIL,\n  ITAK: COLOR_SL_FLAG.TAMIL,\n  AITC: \"yellow\",\n  TMVP: \"red\",\n  MNA: \"darkgreen\",\n  SLMC: \"darkgreen\",\n  EPDP: \"red\",\n  TULF: \"red\",\n  SLMP: \"purple\",\n\n  other: \"gray\",\n  others: \"gray\",\n  // ethnicity_of_population\n  bharatha: \"cyan\",\n  burgher: \"purple\",\n  chetty: \"blue\",\n  indian_tamil: COLOR_SL_FLAG.TAMIL,\n  tamil: COLOR_SL_FLAG.TAMIL,\n  malay: COLOR_SL_FLAG.MOOR,\n  moor: COLOR_SL_FLAG.MOOR,\n  muslim: COLOR_SL_FLAG.MOOR,\n  sinhalese: COLOR_SL_FLAG.SINHALA,\n  sri_lankan_tamil: COLOR_SL_FLAG.TAMIL,\n  // religious_affiliation_of_population\n  buddhist: COLOR_SL_FLAG.BUDDHIST,\n  islam: COLOR_SL_FLAG.MOOR,\n  hindu: COLOR_SL_FLAG.TAMIL,\n  roman_catholic: \"purple\",\n  other_christian: \"blue\",\n  christian: \"purple\",\n  // gender_of_population\n  female: \"pink\",\n  male: \"lightblue\",\n  // age_group_of_population\n  // relationship_to_household_head_of_population\n  son_or_daughter: \"green\",\n  head: \"blue\",\n  wife_or_husband: \"pink\",\n  grandchild_or_great_grand_child: \"darkgreen\",\n  other_relative: \"yellow\",\n  non_relative: \"silver\",\n  son_or_daughter_in_law: \"lightgreen\",\n  parent_of_head_or_spouse: \"red\",\n  boarder: \"gray\",\n  domestic_employee: \"brown\",\n  clergy: \"yellow\", //\n  // communication_items_owned_by_household\n  tv: \"green\",\n  mobile: \"purple\",\n  radio: \"maroon\",\n  fixed_tp: \"blue\",\n  pc: \"red\",\n  laptop: \"pink\",\n  fax: \"silver\",\n  // cooking_fuel_of_household\n  fire_wood: \"brown\",\n  gas: \"orange\",\n  kerosene: \"purple\",\n  electricity: \"blue\",\n  // roof_type_in_housing_unit\n\n  // rooms_in_housing_unit\n  // floor_type_in_housing_unit\n  asbestos: \"gray\",\n  tile: \"darkred\",\n  metal_sheet: \"silver\",\n  concrete: \"green\",\n  zink_aluminium_sheet: \"blue\",\n  cement: \"lightgray\",\n  tile_or_granite_or_terrazo: \"orange\",\n  mud: \"darkbrown\",\n  wood: \"brown\",\n  // solid_waste_disposal_by_household\n  occupants_burn: \"red\",\n  occupants_bury: \"orange\",\n  collected_by_local_authorities: \"blue\",\n  occupants_composting_solid_waste: \"green\",\n  // source_of_drinking_water_of_household\n  tap_within_unit_main_line: \"darkgreen\",\n  tap_within_premises_but_outside_unit_main_line: \"green\",\n  tap_outside_premises_main_line: \"orange\",\n  protected_well_within_premises: \"blue\",\n  protected_well_outside_premises: \"lightblue\",\n  unprotected_well: \"purple\",\n  tube_well: \"cyan\",\n  rural_water_projects: \"pink\",\n  river_or_tank_or_stream: \"red\", //\n  bottled_water: \"silver\",\n  // structure_of_housing_units\n  single_house_single_floor: \"darkgreen\",\n  single_house_double_floor: \"green\",\n  single_house_more_than_2_floors: \"lightgreen\",\n  row_house_or_line_room: \"orange\",\n  attached_house_or_annex: \"silver\",\n  twin_house: \"cyan\",\n  flat: \"blue\",\n  condominium: \"purple\",\n  hut_or_shanty: \"red\",\n\n  // housing_ownership_status_of_household\n  owned_by_a_household_member: \"green\",\n  rent_or_lease_privately_owned: \"blue\",\n  rent_or_lease_government_owned: \"cyan\",\n  occupied_free_of_rent: \"orange\",\n  encroached: \"red\",\n  // toilet_facilities_of_household\n  water_seal_and_connected_to_a_piped_sewer_system: \"green\",\n  water_seal_and_connected_to_a_septic_tank: \"lightgreen\",\n  pour_flush_toilet_not_water_seal: \"orange\",\n  direct_pit: \"red\",\n  not_using_a_toilet: \"black\",\n  // lighting_of_household\n  electricity_national_electricity_network: \"blue\",\n  solar_power: \"yellow\",\n  bio_gas: \"orange\",\n  // living_quarters\n  housing_unit: \"green\",\n  collective_living_quarter: \"orange\",\n  non_housing_unit: \"red\",\n  // type_of_housing_unit\n  semi_permanent: \"orange\",\n  permanent: \"green\",\n  improvised: \"red\",\n  unclassified: \"black\",\n  // marital_status_of_population\n  married_registered: \"blue\",\n  never_married: \"green\",\n  widowed: \"orange\",\n  married_customary: \"lightblue\",\n  separated_not_legally: \"pink\",\n  divorced: \"red\",\n  legally_separated: \"maroon\",\n  // wall_type_in_housing_units\n  cement_block_or_stone: \"darkgray\",\n  brick: \"maroon\",\n  cabook: \"orange\",\n  soil_bricks: \"green\",\n  plank_or_metal_sheet: \"silver\",\n  // occupation_status_of_housing_units\n  cadjan_or_palmyrah: \"orange\",\n  occupied: \"green\",\n  vacant: \"red\",\n  // year_of_construction_of_housing_unit\n  // persons_living_in_housing_unit\n};\n","export const APP_NAME = \"lk_regions\";\n","import { MathX } from \"@nuuuwan/utils-js-dev\";\nconst LRU = require(\"lru-cache\");\nconst LRU_CACHE = new LRU();\n\nexport class DataStructures {\n  static async buildIndex(keyIDs, asyncFuncKeyToData) {\n    const dataList = await Promise.all(\n      keyIDs.map(async function (keyID) {\n        return await asyncFuncKeyToData(keyID);\n      })\n    );\n\n    return keyIDs.reduce(function (index, keyID, iKey) {\n      index[keyID] = dataList[iKey];\n      return index;\n    }, {});\n  }\n\n  static invertDict(keyToValue) {\n    return Object.entries(keyToValue).reduce(function (\n      valueToKeys,\n      [key, value]\n    ) {\n      if (value) {\n        if (!valueToKeys[value]) {\n          valueToKeys[value] = [];\n        }\n        valueToKeys[value].push(key);\n      }\n      return valueToKeys;\n    },\n    {});\n  }\n}\n\nconst DEFAULT_PRECISION = 3;\n\nexport class Humanize {\n  static number(x) {\n    if (!x) {\n      return \"-\";\n    }\n\n    if (x > 1_000_000) {\n      return (x / 1_000_000).toPrecision(DEFAULT_PRECISION) + \"M\";\n    }\n    if (x > 1_000) {\n      return (x / 1_000).toPrecision(DEFAULT_PRECISION) + \"K\";\n    }\n    return x;\n  }\n\n  static percent(x, xSum) {\n    if (!xSum || !x) {\n      return \"-\";\n    }\n    const p = x / xSum;\n    if (p < 0.01) {\n      return \"<1%\";\n    }\n    return (p * 100.0).toPrecision(DEFAULT_PRECISION) + \"%\";\n  }\n}\n\nexport class StatX {\n  static mean(xList) {\n    const n = xList.length;\n    return MathX.sum(xList) / n;\n  }\n\n  static variance(xList) {\n    const n = xList.length;\n    const eX2 = MathX.sum(xList.map((x) => x * x)) / n;\n    const mean = StatX.mean(xList);\n    return eX2 - mean;\n  }\n\n  static stdev(xList) {\n    return Math.sqrt(StatX.variance(xList));\n  }\n}\n\nexport class LRUCache {\n  static async get(cacheKey, asyncFallback) {\n    const hotItemInLRUCache = LRU_CACHE.get(cacheKey);\n    if (hotItemInLRUCache) {\n      return JSON.parse(hotItemInLRUCache);\n    }\n\n    const hotItemInLocalStorage = localStorage.getItem(cacheKey);\n    if (hotItemInLocalStorage) {\n      LRU_CACHE.set(cacheKey, hotItemInLocalStorage);\n      return JSON.parse(hotItemInLocalStorage);\n    }\n\n    const coldItemRaw = await asyncFallback();\n    const coldItem = JSON.stringify(coldItemRaw);\n    LRU_CACHE.set(cacheKey, coldItem);\n\n    try {\n      localStorage.setItem(cacheKey, coldItem);\n    } catch (QuotaExceededError) {\n      localStorage.clear();\n    }\n    return coldItemRaw;\n  }\n}\n","import { MathX, Color, WWW } from \"@nuuuwan/utils-js-dev\";\nimport { FIELD_NAME_TO_COLOR } from \"../constants/ColorConstants.js\";\nimport { APP_NAME } from \"../constants/Constants.js\";\nimport { LRUCache, DataStructures } from \"./BaseUtils.js\";\n\nimport PeopleAltIcon from \"@mui/icons-material/PeopleAlt\";\nimport BallotIcon from \"@mui/icons-material/Ballot\";\n\nlet adhocValueKeyToColor = {};\n\nconst ID_FIELD_KEY = \"entity_id\";\nconst OTHER_LIMIT_GLOBAL = 0.01;\nconst OTHER_LIMIT_LOCAL = 0.2;\nconst KEY_OTHER = \"other\";\nconst MERGE_ALIAS_MAP = {\n  moor: \"muslim\",\n  malay: \"muslim\",\n  sri_lankan_tamil: \"tamil\",\n  indian_tamil: \"tamil\",\n  roman_catholic: \"christian\",\n  other_christian: \"christian\",\n};\n\nconst PRESIDENTIAL_ELECTION_YEAR_LIST = [\n  2019, 2015, 2010, 2005, 1999, 1994, 1988, 1982,\n];\n\nconst PARLIAMENTARY_ELECTION_YEAR_LIST = [\n  1989, 1994, 2000, 2001, 2004, 2010, 2015, 2020,\n];\n\nexport const COLOR_INFO_LIST = []\n  .concat(\n    // Presidential Elections\n    PRESIDENTIAL_ELECTION_YEAR_LIST.map(function (electionYear) {\n      return {\n        label: `${electionYear} Presidential Election`,\n        tableName: `regions_ec.${electionYear}_election_presidential.result`,\n        Icon: BallotIcon,\n      };\n    }),\n\n    // Parliamentary Elections\n    PARLIAMENTARY_ELECTION_YEAR_LIST.map(function (electionYear) {\n      return {\n        label: `${electionYear} Parliamentary Election`,\n        tableName: `regions_ec.${electionYear}_election_parliamentary.result`,\n        Icon: BallotIcon,\n      };\n    }),\n\n    // 2012 Census\n    [\n      {\n        label: \"Ethnicity\",\n        tableName: \"regions.2012_census.ethnicity_of_population\",\n        Icon: PeopleAltIcon,\n      },\n      {\n        label: \"Religion\",\n        tableName: \"regions.2012_census.religious_affiliation_of_population\",\n        Icon: PeopleAltIcon,\n      },\n    ]\n  )\n  .sort((a, b) => -a.tableName.localeCompare(b.tableName));\n\nconst TABLE_NAMES = COLOR_INFO_LIST.map((d) => d.tableName);\nexport const DEFAULT_TABLE_NAME = TABLE_NAMES[0];\n\nexport default class GIG2 {\n  static async getTable(tableName) {\n    const url = `/${APP_NAME}/data/gig2/${tableName}.tsv`;\n    return await WWW.tsv(url);\n  }\n\n  static async getTableIndex(tableName) {\n    const table = await GIG2.getTable(tableName);\n    const valueKeys = GIG2.getValueKeys(table[0]);\n    return table.reduce(function (tableIndex, tableRow) {\n      tableIndex[tableRow[ID_FIELD_KEY]] = Object.entries(tableRow).reduce(\n        function (cleanTableRow, [key, value]) {\n          if (valueKeys.includes(key)) {\n            value = parseFloat(value);\n            if (isNaN(value)) {\n              value = 0;\n            }\n          }\n          cleanTableRow[key] = value;\n          return cleanTableRow;\n        },\n        {}\n      );\n      return tableIndex;\n    }, {});\n  }\n\n  static getValueKeys(tableRow) {\n    const valueCellKeys = Object.keys(tableRow).filter(\n      (cellKey) =>\n        !(\n          cellKey.includes(\"total_\") ||\n          cellKey.includes(\"_id\") ||\n          cellKey.includes(\"result_ut\") ||\n          cellKey.includes(\"valid\") ||\n          cellKey.includes(\"rejected\") ||\n          cellKey.includes(\"polled\") ||\n          cellKey.includes(\"electors\")\n        )\n    );\n    return valueCellKeys;\n  }\n\n  static getValueEntriesSortedByValue(tableRow) {\n    const valueKeys = GIG2.getValueKeys(tableRow);\n    return valueKeys\n      .map((valueKey) => [valueKey, tableRow[valueKey]])\n      .sort((a, b) => b[1] - a[1]);\n  }\n\n  static getMaxValueKey(tableRow) {\n    const valueKeys = GIG2.getValueKeys(tableRow);\n    const maxValueKey = valueKeys.reduce(function (maxValueKey, valueKey) {\n      if (valueKey !== KEY_OTHER) {\n        if (tableRow[maxValueKey] < tableRow[valueKey]) {\n          maxValueKey = valueKey;\n        }\n      }\n      return maxValueKey;\n    }, valueKeys[0]);\n    return maxValueKey;\n  }\n\n  static getMinMaxValueP(dataList, valueKey) {\n    return dataList.reduce(\n      function ([minValueP, maxValueP], tableRow) {\n        const sumValue = GIG2.getSumValues(tableRow);\n        const value = tableRow[valueKey];\n        const valueP = value / sumValue;\n        return [Math.min(minValueP, valueP), Math.max(maxValueP, valueP)];\n      },\n      [1.0, 0.0]\n    );\n  }\n\n  static getSumValues(tableRow) {\n    const valueKeys = GIG2.getValueKeys(tableRow);\n    return MathX.sum(valueKeys.map((valueKey) => tableRow[valueKey]));\n  }\n\n  static getValueKeyP(tableRow, valueKey) {\n    const sumValues = GIG2.getSumValues(tableRow);\n    return tableRow[valueKey] / sumValues;\n  }\n\n  static getValueKeyColor(valueKey) {\n    if (FIELD_NAME_TO_COLOR[valueKey]) {\n      return FIELD_NAME_TO_COLOR[valueKey];\n    }\n    if (!adhocValueKeyToColor[valueKey]) {\n      adhocValueKeyToColor[valueKey] = Color.getRandomHSLA();\n    }\n    return adhocValueKeyToColor[valueKey];\n  }\n\n  static getTableRowColor(tableRow) {\n    const maxValueKey = GIG2.getMaxValueKey(tableRow);\n    return GIG2.getValueKeyColor(maxValueKey);\n  }\n\n  static getValuePToRankP(dataList, valueKey) {\n    const sortedValuePs = dataList\n      .map((tableRow) => GIG2.getValueKeyP(tableRow, valueKey))\n      .sort();\n    const nValues = sortedValuePs.length;\n    return sortedValuePs.reduce(function (valuePToRankP, valueP, iValue) {\n      valuePToRankP[valueP] = iValue / nValues;\n      return valuePToRankP;\n    }, {});\n  }\n\n  static getFirstRow(tableIndex) {\n    return Object.values(tableIndex)[0];\n  }\n\n  static getTotalRow(tableIndex) {\n    const firstRow = GIG2.getFirstRow(tableIndex);\n    const valueKeys = GIG2.getValueKeys(firstRow);\n    return valueKeys.reduce(function (totalRow, key) {\n      totalRow[key] = MathX.sum(\n        Object.values(tableIndex).map((tableRow) => tableRow[key])\n      );\n      return totalRow;\n    }, {});\n  }\n\n  static getValueSum(tableRow) {\n    const valueKeys = GIG2.getValueKeys(tableRow);\n    return MathX.sum(valueKeys.map((valueKey) => tableRow[valueKey]));\n  }\n\n  static expandOtherOnTableRow(tableRow, sortedNonOtherKeys, otherValueKeys) {\n    let expandedTableRow = sortedNonOtherKeys.reduce(function (\n      expandedTableRow,\n      nonOtherKey\n    ) {\n      expandedTableRow[nonOtherKey] = tableRow[nonOtherKey];\n      return expandedTableRow;\n    },\n    {});\n\n    const otherValueSum = MathX.sum(\n      otherValueKeys.map((valueKey) => tableRow[valueKey])\n    );\n    expandedTableRow[KEY_OTHER] = otherValueSum;\n\n    return expandedTableRow;\n  }\n\n  static mergeKeysOnTableRow(tableRow) {\n    return Object.entries(tableRow).reduce(function (\n      mergedTableRow,\n      [key, value]\n    ) {\n      const mergedKey = MERGE_ALIAS_MAP[key] ? MERGE_ALIAS_MAP[key] : key;\n      if (!mergedTableRow[mergedKey]) {\n        mergedTableRow[mergedKey] = 0;\n      }\n      mergedTableRow[mergedKey] += value;\n      return mergedTableRow;\n    },\n    {});\n  }\n\n  static mergeKeysOnTable(tableIndex) {\n    return Object.entries(tableIndex).reduce(function (\n      mergedTableIndex,\n      [regionID, tableRow]\n    ) {\n      mergedTableIndex[regionID] = GIG2.mergeKeysOnTableRow(tableRow);\n      return mergedTableIndex;\n    },\n    {});\n  }\n\n  static mergeAndExpandOtherOnTable(tableIndex) {\n    const mergedTableIndex = GIG2.mergeKeysOnTable(tableIndex);\n\n    const totalRow = GIG2.getTotalRow(mergedTableIndex);\n    const valueKeys = GIG2.getValueKeys(totalRow);\n    const valueSum = GIG2.getValueSum(totalRow);\n\n    const nonOtherValueKeysGlobal = valueKeys.filter(\n      (valueKey) =>\n        totalRow[valueKey] / valueSum >= OTHER_LIMIT_GLOBAL &&\n        valueKey !== KEY_OTHER\n    );\n    const nonOtherValueKeysLocalSet = Object.values(mergedTableIndex).reduce(\n      function (nonOtherValueKeysLocalSet, tableRow) {\n        const tableRowValueSum = GIG2.getValueSum(tableRow);\n        return valueKeys.reduce(function (otherValueKeysLocal, valueKey) {\n          if (\n            tableRow[valueKey] / tableRowValueSum >= OTHER_LIMIT_LOCAL &&\n            valueKey !== KEY_OTHER\n          ) {\n            nonOtherValueKeysLocalSet.add(valueKey);\n          }\n          return nonOtherValueKeysLocalSet;\n        });\n      },\n      new Set(nonOtherValueKeysGlobal)\n    );\n    const nonOtherValueKeys = Array.from(nonOtherValueKeysLocalSet);\n\n    const otherValueKeys = valueKeys.filter(\n      (valueKey) => !nonOtherValueKeysLocalSet.has(valueKey)\n    );\n\n    const sortedNonOtherKeys = nonOtherValueKeys\n      .map(function (key) {\n        return { key, value: totalRow[key] };\n      })\n      .sort((a, b) => b.value - a.value)\n      .map((x) => x.key);\n\n    const expandedTableIndex = Object.entries(mergedTableIndex).reduce(\n      function (expandedTableIndex, [regionID, tableRow]) {\n        expandedTableIndex[regionID] = GIG2.expandOtherOnTableRow(\n          tableRow,\n          sortedNonOtherKeys,\n          otherValueKeys\n        );\n        return expandedTableIndex;\n      },\n      {}\n    );\n    return expandedTableIndex;\n  }\n\n  static async getTableIndexIndex() {\n    return await LRUCache.get(\n      \"getTableIndexIndex\",\n      GIG2.getTableIndexIndexNoCache\n    );\n  }\n\n  static async getTableIndexIndexNoCache() {\n    return await DataStructures.buildIndex(TABLE_NAMES, GIG2.getTableIndex);\n  }\n}\n","import { WWW, StringX } from \"@nuuuwan/utils-js-dev\";\nimport { APP_NAME } from \"../constants/Constants.js\";\n\nexport const REGION_ID_LK = \"LK\";\nexport const ENT = {\n  COUNTRY: \"country\",\n  PROVINCE: \"province\",\n  DISTRICT: \"district\",\n  DSD: \"dsd\",\n  GND: \"gnd\",\n  PD: \"pd\",\n  ED: \"ed\",\n  MOH: \"moh\",\n  LG: \"lg\",\n  UNKNOWN: \"unknown\",\n};\n\nexport const REGION_TYPES = Object.values(ENT);\n\nexport const ENT_TYPE_TO_LONG_NAME = {\n  [ENT.Country]: \"Country\",\n  [ENT.PROVINCE]: \"Province\",\n  [ENT.DISTRICT]: \"District\",\n  [ENT.DSD]: \"Divisional Secretariat Division\",\n  [ENT.GND]: \"Grama Niladhari Division\",\n  [ENT.PD]: \"Polling Division\",\n  [ENT.ED]: \"Electoral District\",\n  [ENT.MOH]: \"Medical Officer of Health Area\",\n  [ENT.LG]: \"Local Authority Area\",\n};\n\nexport const PARENT_TO_CHILD = {\n  [ENT.COUNTRY]: ENT.PROVINCE,\n  [ENT.PROVINCE]: ENT.DISTRICT,\n  [ENT.DISTRICT]: ENT.DSD,\n  [ENT.DSD]: ENT.GND,\n  [ENT.GND]: undefined,\n  [ENT.PD]: undefined,\n  [ENT.ED]: [ENT.PD],\n};\n\nexport default class Ents {\n  static getEntType(entID) {\n    if (entID.substring(0, 2) === \"LK\") {\n      const entIDLength = entID.length;\n      switch (entIDLength) {\n        case 2:\n          return ENT.COUNTRY;\n        case 4:\n          return ENT.PROVINCE;\n        case 5:\n          return ENT.DISTRICT;\n        case 7:\n          return ENT.DSD;\n        case 10:\n          return ENT.GND;\n        default:\n          return ENT.UNKNOWN;\n      }\n    }\n    if (entID.substring(0, 2) === \"EC\") {\n      const entIDLength = entID.length;\n      switch (entIDLength) {\n        case 5:\n          return ENT.ED;\n        case 6:\n          return ENT.PD;\n        default:\n          return ENT.UNKNOWN;\n      }\n    }\n\n    if (entID.substring(0, 2) === \"LG\") {\n      return ENT.LG;\n    }\n\n    if (entID.substring(0, 3) === \"MOH\") {\n      return ENT.MOH;\n    }\n    return ENT.UNKNOWN;\n  }\n  static getRegionName(regionType) {\n    return ENT_TYPE_TO_LONG_NAME[regionType];\n  }\n  static async getEntsByType(entType) {\n    const url = `/${APP_NAME}/data/ents/${entType}.tsv`;\n    return await WWW.tsv(url);\n  }\n\n  static async getEntIndexByType(entType) {\n    const ents = await Ents.getEntsByType(entType);\n    return ents.reduce(function (entIndex, ent) {\n      entIndex[ent.id] = ent;\n      return entIndex;\n    }, {});\n  }\n\n  static async getAllEntIndex() {\n    const entTypes = REGION_TYPES;\n    const entIndexList = await Promise.all(\n      entTypes.map(async function (entType) {\n        return await Ents.getEntIndexByType(entType);\n      })\n    );\n\n    return entTypes.reduce(function (allEntIndex, entType, iEnt) {\n      allEntIndex[entType] = entIndexList[iEnt];\n      return allEntIndex;\n    }, {});\n  }\n\n  static async getEnt(entID) {\n    const entType = Ents.getEntType(entID);\n    const entIndex = await Ents.getEntIndexByType(entType);\n    let ent = entIndex[entID];\n    if (!ent) {\n      return null;\n    }\n    if (ent[\"centroid\"]) {\n      ent[\"centroid\"] = JSON.parse(ent[\"centroid\"]);\n    }\n    return ent;\n  }\n\n  static async getParentToChildMap() {\n    const url = `data/ents/parent_to_child_map.json`;\n    return await WWW.json(url);\n  }\n\n  static getChildType(parentType) {\n    return PARENT_TO_CHILD[parentType];\n  }\n\n  static async getChildIDs(parentID, childRegionType) {\n    const ents = await Ents.getEntsByType(childRegionType);\n    return ents\n      .map((ent) => ent.id)\n      .filter((entID) => entID.includes(parentID) || parentID === \"LK\");\n  }\n\n  static getEntTypeLongName(entType) {\n    return ENT_TYPE_TO_LONG_NAME[entType]\n      ? ENT_TYPE_TO_LONG_NAME[entType]\n      : StringX.toTitleCase(entType);\n  }\n}\n","import { WWW } from \"@nuuuwan/utils-js-dev\";\n\nimport { APP_NAME } from \"../constants/Constants.js\";\nimport Ents, { ENT } from \"./Ents.js\";\nimport GIG2 from \"./GIG2.js\";\nimport { DataStructures } from \"./BaseUtils.js\";\n\nexport default class RegionGroup {\n  static async getMapInfoForCustomMap(mapName) {\n    const url = `/${APP_NAME}/data/custom_maps/${mapName}.json`;\n    const rawInfo = await WWW.json(url);\n\n    const groupToRegions = rawInfo[\"label_to_region_ids\"];\n    const groupIndex = Object.keys(groupToRegions).reduce(function (\n      groupIndex,\n      groupID\n    ) {\n      groupIndex[groupID] = {\n        groupID: groupID,\n        name: groupID,\n      };\n      return groupIndex;\n    },\n    {});\n\n    return {\n      mapID: mapName,\n      name: mapName,\n      groupIndex,\n      groupToRegions,\n    };\n  }\n\n  static async getMapInfoForRegionType(regionType) {\n    const regionEnts = await Ents.getEntsByType(regionType);\n\n    const groupList = regionEnts.map(function (regionEnt) {\n      return {\n        groupID: regionEnt.id,\n        name: regionEnt.name,\n      };\n    });\n\n    const groupIndex = groupList.reduce(function (groupIndex, group) {\n      groupIndex[group.groupID] = group;\n      return groupIndex;\n    }, {});\n\n    const regionIDs = regionEnts\n      .map((regionEnt) => regionEnt.id)\n      .filter(function (regionID) {\n        return regionType !== ENT.PD || regionID.substring(5) !== \"P\";\n      });\n\n    const groupToRegions = regionIDs.reduce(function (\n      groupToRegions,\n      regionID\n    ) {\n      groupToRegions[regionID] = [regionID];\n      return groupToRegions;\n    },\n    {});\n\n    return {\n      mapID: \"region_type_\" + regionType,\n      name: \"By \" + Ents.getEntTypeLongName(regionType),\n      groupIndex,\n      groupToRegions,\n    };\n  }\n\n  static async getMapInfoIndex() {\n    const forRegionTypes = await DataStructures.buildIndex(\n      [ENT.PROVINCE, ENT.DISTRICT, ENT.DSD, ENT.ED, ENT.PD],\n      RegionGroup.getMapInfoForRegionType\n    );\n\n    const forCustomMaps = await DataStructures.buildIndex(\n      [\"sl_new_pds.lk-FINAL.compressed\"],\n      RegionGroup.getMapInfoForCustomMap\n    );\n\n    return Object.assign({}, forRegionTypes, forCustomMaps);\n  }\n\n  static getGroupTableIndex(groupToRegions, activeTableIndex) {\n    const valueKeys = GIG2.getValueKeys(GIG2.getFirstRow(activeTableIndex));\n\n    const rawGroupTableIndex = Object.entries(groupToRegions).reduce(function (\n      groupTableIndex,\n      [groupID, regionIDs]\n    ) {\n      groupTableIndex[groupID] = regionIDs.reduce(function (\n        groupRow,\n        regionID\n      ) {\n        if (!activeTableIndex[regionID]) {\n          return groupRow;\n        }\n        return Object.entries(activeTableIndex[regionID]).reduce(function (\n          groupRow,\n          [key, value]\n        ) {\n          if (valueKeys.includes(key)) {\n            if (!groupRow[key]) {\n              groupRow[key] = value;\n            } else {\n              groupRow[key] += value;\n            }\n          } else {\n            groupRow[key] = value;\n          }\n          return groupRow;\n        },\n        groupRow);\n      },\n      {});\n      return groupTableIndex;\n    },\n    {});\n\n    const groupTableIndex = GIG2.mergeAndExpandOtherOnTable(rawGroupTableIndex);\n\n    return groupTableIndex;\n  }\n}\n","import { Component } from \"react\";\nimport { MapContainer, TileLayer, ZoomControl } from \"react-leaflet\";\n\nimport \"./GeoMap.css\";\n\nconst URL_FORMAT = \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\";\n\nexport default class GeoMap extends Component {\n  render() {\n    const { center, zoom } = this.props;\n    return (\n      <MapContainer center={center} zoom={zoom}>\n        <TileLayer url={URL_FORMAT} />\n        <ZoomControl zoom={zoom} position=\"bottomright\" />\n        {this.props.children}\n      </MapContainer>\n    );\n  }\n}\n","import * as React from \"react\";\nimport TableCell from \"@mui/material/TableCell\";\n\nimport { StringX } from \"@nuuuwan/utils-js-dev\";\n\nimport { Humanize } from \"./BaseUtils.js\";\nimport GIG2 from \"./GIG2.js\";\n\nexport function TableCellHeader(props) {\n  const { valueKey } = props;\n  const style = { fontWeight: 800 };\n  return (\n    <TableCell\n      key={\"header-\" + valueKey}\n      align=\"right\"\n      width=\"30\"\n      style={style}\n    >\n      {StringX.toTitleCase(valueKey)}\n    </TableCell>\n  );\n}\n\nexport function TableCellNumber(props) {\n  const { value, valueSum, valueKey, isMax } = props;\n  const humanizedValue = Humanize.number(value);\n  const humanizedPercent = Humanize.percent(value, valueSum);\n  const p = value / valueSum;\n\n  let backgroundColor = \"white\";\n  let color = \"black\";\n  if (isMax) {\n    backgroundColor = GIG2.getValueKeyColor(valueKey);\n    color = \"white\";\n  }\n\n  let opacity = 0.2;\n  if (p > 0.5) {\n    opacity = p;\n  } else if (p > 0.1) {\n    opacity = 0.5;\n  } else if (p > 0.01) {\n    opacity = 0.4;\n  }\n\n  const styleText = {\n    backgroundColor,\n    opacity,\n    borderRadius: 3,\n    padding: 3,\n  };\n\n  return (\n    <TableCell align=\"right\">\n      <div style={styleText}>\n        <div style={{ fontSize: 15, color }}>{humanizedPercent}</div>\n        <div style={{ fontSize: 9, color }}>{humanizedValue}</div>\n      </div>\n    </TableCell>\n  );\n}\n","import { Component } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Ents, { ENT } from \"../../base/Ents.js\";\n\nexport default class RegionLabel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { regionEnt: undefined };\n  }\n  async componentDidMount() {\n    const { regionID } = this.props;\n    const regionType = Ents.getEntType(regionID);\n    if (regionType !== ENT.UNKNOWN) {\n      const regionEnt = await Ents.getEnt(regionID);\n      this.setState({ regionEnt });\n    }\n  }\n\n  render() {\n    const { regionEnt } = this.state;\n    const { regionID } = this.props;\n    const regionType = Ents.getEntType(regionID);\n\n    const renderedName = regionEnt ? regionEnt.name : regionID;\n\n    return (\n      <Box>\n        <Typography variant=\"body2\" sx={{ fontSize: \"100%\", color: \"black\" }}>\n          {renderedName}\n        </Typography>\n        <Typography variant=\"body2\" sx={{ fontSize: \"60%\", color: \"gray\" }}>\n          {regionType.toUpperCase()}\n        </Typography>\n      </Box>\n    );\n  }\n}\n","import * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\n\nimport { StringX } from \"@nuuuwan/utils-js-dev\";\n\nimport { TableCellHeader, TableCellNumber } from \"../../base/TableX.js\";\nimport RegionLabel from \"../../stateful/atoms/RegionLabel.js\";\nimport GIG2 from \"../../base/GIG2.js\";\n\nexport default function DataTable(props) {\n  const { groupTableIndex, activeMapColorTableName } = props;\n  const valueKeys = GIG2.getValueKeys(GIG2.getFirstRow(groupTableIndex));\n\n  const title = StringX.toTitleCase(activeMapColorTableName.split(\".\")[1]);\n\n  return (\n    <Box>\n      <Typography variant=\"subtitle1\" component=\"div\">\n        {title}\n      </Typography>\n      <TableContainer\n        sx={{ position: \"absolute\", top: 100, bottom: 20, width: 560 }}\n      >\n        <Table stickyHeader padding=\"none\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"right\" width=\"5\" />\n              <TableCell align=\"right\" width=\"80\" />\n              {valueKeys.map((valueKey) => (\n                <TableCellHeader valueKey={valueKey} />\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {Object.entries(groupTableIndex).map(function (\n              [groupID, dataRow],\n              iRow\n            ) {\n              const valueSum = GIG2.getValueSum(dataRow);\n              const maxValueKey = GIG2.getMaxValueKey(dataRow);\n              return (\n                <TableRow key={groupID}>\n                  <TableCell>\n                    <Typography variant=\"caption\">{`${iRow + 1}.`}</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <RegionLabel regionID={groupID} />\n                  </TableCell>\n                  {valueKeys.map(function (valueKey) {\n                    const isMax = maxValueKey === valueKey;\n                    return (\n                      <TableCellNumber\n                        key={groupID + \"-\" + valueKey}\n                        value={dataRow[valueKey]}\n                        valueSum={valueSum}\n                        valueKey={valueKey}\n                        isMax={isMax}\n                      />\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n}\n","import Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport Paper from \"@mui/material/Paper\";\n\nimport { MathX } from \"@nuuuwan/utils-js-dev\";\n\nimport { Humanize, StatX } from \"../../base/BaseUtils.js\";\n\nconst POP_TABLE_NAME = \"regions.2012_census.ethnicity_of_population\";\nconst POP_FIELD_KEY = \"total_population\";\n\nfunction GroupInfoView(props) {\n  const { region, title } = props;\n  return (\n    <Box key={region.groupID}>\n      <Typography variant=\"h5\">{Humanize.number(region.pop)}</Typography>\n      <Typography variant=\"h7\">{region.groupID}</Typography>\n      <Typography variant=\"caption\">{title}</Typography>\n    </Box>\n  );\n}\n\nfunction PCorrectStats(props) {\n  const { popList, pCorrect } = props;\n\n  const meanPop = StatX.mean(popList);\n  const limitLower = meanPop / (1 + pCorrect);\n  const limitUpper = meanPop * (1 + pCorrect);\n\n  const correctSizeRegions = popList.filter(\n    (pop) => limitLower <= pop && limitUpper >= pop\n  );\n  const nCorrectSizeRegions = correctSizeRegions.length;\n  const nRegions = popList.length;\n\n  return (\n    <>\n      <Box>\n        <Typography variant=\"h5\" display=\"inline\">\n          {Humanize.percent(nCorrectSizeRegions, nRegions)}\n        </Typography>\n        <Typography variant=\"h7\" display=\"inline\">\n          {\" \" + nCorrectSizeRegions}\n        </Typography>\n      </Box>\n      <Typography variant=\"caption\">\n        Regions within {Humanize.percent(pCorrect, 1)} of Mean Population (\n        {Humanize.number(limitLower)} to {Humanize.number(limitUpper)})\n      </Typography>\n    </>\n  );\n}\n\nexport default function MapPropertiesView(props) {\n  const { groupToRegions, tableIndexIndex } = props;\n  const popTableIndex = tableIndexIndex[POP_TABLE_NAME];\n\n  const nRegions = Object.keys(groupToRegions).length;\n\n  const groupInfoList = Object.entries(groupToRegions)\n    .map(function ([groupID, regionIDs]) {\n      const pop = MathX.sum(\n        regionIDs.map(function (regionID) {\n          if (popTableIndex[regionID]) {\n            return parseInt(popTableIndex[regionID][POP_FIELD_KEY]);\n          } else {\n            return 0;\n          }\n        })\n      );\n      return {\n        groupID,\n        pop,\n      };\n    })\n    .sort(function (a, b) {\n      return a.pop - b.pop;\n    });\n\n  const regionMin = groupInfoList[0];\n  const regionMax = groupInfoList[nRegions - 1];\n\n  const popList = groupInfoList.map((groupInfo) => groupInfo.pop);\n\n  const meanPop = StatX.mean(popList);\n  const stdevPop = StatX.stdev(popList);\n\n  return (\n    <Box>\n      <Typography variant=\"h5\">{nRegions}</Typography>\n      <Typography variant=\"caption\">Number of Regions</Typography>\n\n      <Paper sx={{ p: 2 }}>\n        <Typography variant=\"h4\">{\"Population Balance\"}</Typography>\n\n        <Box>\n          <Typography variant=\"h5\" display=\"inline\">\n            {Humanize.number(meanPop)}\n          </Typography>\n          <Typography variant=\"h7\" display=\"inline\">\n            {\" ± \" + Humanize.number(stdevPop * 2)}\n          </Typography>\n        </Box>\n        <Typography variant=\"caption\">\n          Mean Population ± 3 Standard Deviations\n        </Typography>\n\n        <GroupInfoView title=\"Smallest Region\" region={regionMin} />\n        <GroupInfoView title=\"Largest Region\" region={regionMax} />\n\n        <Box>\n          <Typography variant=\"h5\" display=\"inline\">\n            {(regionMax.pop / regionMin.pop).toPrecision(2) + \" : 1\"}\n          </Typography>\n        </Box>\n        <Typography variant=\"caption\">Largest : Smallest</Typography>\n\n        <PCorrectStats popList={popList} pCorrect={0.1} />\n        <PCorrectStats popList={popList} pCorrect={0.2} />\n        <PCorrectStats popList={popList} pCorrect={0.4} />\n      </Paper>\n    </Box>\n  );\n}\n","import { Component } from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport Tab from \"@mui/material/Tab\";\nimport TabContext from \"@mui/lab/TabContext\";\nimport TabList from \"@mui/lab/TabList\";\nimport TabPanel from \"@mui/lab/TabPanel\";\n\nimport DataTable from \"../../nonstate/molecules/DataTable.js\";\nimport MapPropertiesView from \"../../nonstate/molecules/MapPropertiesView.js\";\n\nconst TAB = {\n  MAP_PROPS: \"Map Properties\",\n  DATA: \"Data\",\n};\nconst DEFAULT_TAB = TAB.MAP_PROPS;\n\nexport default class MainPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { activeTab: DEFAULT_TAB };\n  }\n\n  onTabChange(event, newActiveTab) {\n    this.setState({ activeTab: newActiveTab });\n  }\n\n  render() {\n    const {\n      groupToRegions,\n      groupTableIndex,\n      activeMapColorTableName,\n      tableIndexIndex,\n    } = this.props;\n    const { activeTab } = this.state;\n\n    return (\n      <Paper\n        sx={{\n          position: \"absolute\",\n          top: 20,\n          right: 20,\n          bottom: 20,\n          width: 600,\n          zIndex: 1000,\n        }}\n      >\n        <TabContext value={activeTab}>\n          <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n            <TabList\n              onChange={this.onTabChange.bind(this)}\n              aria-label=\"lab API tabs example\"\n            >\n              {Object.values(TAB).map(function (tab) {\n                return <Tab key={tab} label={tab} value={tab} />;\n              })}\n            </TabList>\n          </Box>\n\n          <TabPanel value={TAB.MAP_PROPS}>\n            <MapPropertiesView\n              groupToRegions={groupToRegions}\n              tableIndexIndex={tableIndexIndex}\n            />\n          </TabPanel>\n\n          <TabPanel value={TAB.DATA}>\n            <DataTable\n              groupToRegions={groupToRegions}\n              groupTableIndex={groupTableIndex}\n              activeMapColorTableName={activeMapColorTableName}\n            />\n          </TabPanel>\n        </TabContext>\n      </Paper>\n    );\n  }\n}\n","import { WWW } from \"@nuuuwan/utils-js-dev\";\nimport Ents, { REGION_TYPES } from \"./Ents.js\";\nimport { APP_NAME } from \"../constants/Constants.js\";\n\nexport const DEFAULT_ZOOM = 8;\nexport const DEFAULT_LATLNG = [7.836173, 80.403442];\n\nexport function getDefaultLatLngZoomStr() {\n  return getLatLngZoomStr(DEFAULT_LATLNG, DEFAULT_ZOOM);\n}\n\nexport function getLatLngZoomStr([lat, lng], zoom) {\n  return `${lat}N,${lng}E,${zoom}z`;\n}\n\nexport function parseLatLngZoomStr(locationStr) {\n  const [latStr, lngStr, zoomStr] = locationStr.split(\",\");\n  const lat = parseFloat(latStr.replace(\"N\", \"\"));\n  const lng = parseFloat(lngStr.replace(\"E\", \"\"));\n  const zoom = parseInt(zoomStr.replace(\"z\", \"\"));\n  return { lat, lng, zoom };\n}\n\nexport function getBrowserLatLng(callback) {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      callback([position.coords.latitude, position.coords.longitude]);\n    });\n  } else {\n    callback(DEFAULT_LATLNG);\n  }\n}\n\nfunction isPointInPolygon(point, polygon) {\n  const [y, x] = point;\n  let nIntersects = 0;\n  for (let i in polygon) {\n    const j = (i - 1 + polygon.length) % polygon.length;\n\n    const [xi, yi] = polygon[i];\n    const [xj, yj] = polygon[j];\n\n    // eslint-disable-next-line no-mixed-operators\n    const a = yi > y !== yj > y;\n    // eslint-disable-next-line no-mixed-operators\n    const b = x < ((xj - xi) * (y - yi)) / (yj - yi) + xi;\n\n    const intersect = a && b;\n    if (intersect) {\n      nIntersects += 1;\n    }\n  }\n  return nIntersects % 2 === 1;\n}\n\nfunction isPointInMultiMultiPolygon(point, multiMultiPolygon) {\n  for (let i in multiMultiPolygon) {\n    const multiPolygon = multiMultiPolygon[i];\n    for (let j in multiPolygon) {\n      const polygon = multiPolygon[j];\n      if (isPointInPolygon(point, polygon)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport default class GeoData {\n  static async getCoordinatesForRegion(regionID) {\n    const regionType = Ents.getEntType(regionID);\n    const url = `/${APP_NAME}/data/geo/${regionType}/${regionID}.json`;\n    return await WWW.json(url);\n  }\n\n  static async getRegionToGeo(regionIDs) {\n    const geoDataList = await Promise.all(\n      regionIDs.map(async function (regionID) {\n        return await GeoData.getCoordinatesForRegion(regionID);\n      })\n    );\n\n    return regionIDs.reduce(function (regionToGeo, regionID, iRegion) {\n      regionToGeo[regionID] = geoDataList[iRegion];\n      return regionToGeo;\n    }, {});\n  }\n\n  static async getRegionTree() {\n    const url = `/${APP_NAME}/data/geo/region_tree.json`;\n    return await WWW.json(url);\n  }\n\n  static async isPointInRegion(point, regionID) {\n    const multiPolygon = await GeoData.getCoordinatesForRegion(regionID);\n    return isPointInMultiMultiPolygon(point, multiPolygon);\n  }\n\n  static async getRegionsForPoint(point) {\n    let regionTree = await GeoData.getRegionTree();\n\n    let regionMap = {};\n\n    for (let iRegionType in REGION_TYPES) {\n      const regionType = REGION_TYPES[iRegionType];\n      const regionIDs = Object.keys(regionTree);\n      let isFoundRegion = false;\n      for (let iRegion in regionIDs) {\n        const regionID = regionIDs[iRegion];\n        const _isPointInRegion = await GeoData.isPointInRegion(point, regionID);\n        if (_isPointInRegion) {\n          regionMap[regionType] = regionID;\n          regionTree = regionTree[regionID];\n          isFoundRegion = true;\n        }\n      }\n      if (!isFoundRegion) {\n        break;\n      }\n    }\n    return regionMap;\n  }\n}\n\nexport function roundLatLng(latLng) {\n  const Q = 1000_000;\n  return latLng.map((x) => Math.round(parseFloat(x) * Q) / Q);\n}\n","import { Component } from \"react\";\nimport { GeoJSON, Circle } from \"react-leaflet\";\n\nexport default class RegionView extends Component {\n  render() {\n    const {\n      geoJSON,\n      style,\n      center,\n      radius,\n      renderedPopup,\n      showDorlingCartogram,\n    } = this.props;\n    const onEachFeature = (feature, layer) => {\n      layer.on({\n        click: function (e) {\n          console.debug(\"Not implemented\");\n        },\n      });\n    };\n\n    const renderedCartogram = showDorlingCartogram ? (\n      <Circle center={center} radius={radius} pathOptions={style}>\n        {renderedPopup}\n      </Circle>\n    ) : null;\n\n    const mapStyle = showDorlingCartogram\n      ? {\n          fillColor: style.fillColor,\n          fillOpacity: style.fillOpacity / 5,\n          color: \"rgba(0,0,0,0.2)\",\n          weight: style.weight,\n        }\n      : style;\n\n    return (\n      <>\n        <GeoJSON data={geoJSON} style={mapStyle} onEachFeature={onEachFeature}>\n          {renderedPopup}\n        </GeoJSON>\n        {renderedCartogram}\n      </>\n    );\n  }\n}\n","import * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Box from \"@mui/material/Box\";\n\nimport { TableCellHeader, TableCellNumber } from \"../../base/TableX.js\";\nimport GIG2 from \"../../base/GIG2.js\";\n\nexport default function DataRowTable(props) {\n  const { groupTableRow } = props;\n  const valueSum = GIG2.getValueSum(groupTableRow);\n  return (\n    <Box sx={{ width: 200 }}>\n      <TableContainer>\n        <Table stickyHeader padding=\"none\">\n          <TableBody>\n            {GIG2.getValueEntriesSortedByValue(groupTableRow).map(function (\n              [valueKey, value],\n              iKey\n            ) {\n              if (value === 0) {\n                return null;\n              }\n              return (\n                <TableRow key={valueKey}>\n                  <TableCellHeader valueKey={valueKey} />\n                  <TableCellNumber\n                    value={value}\n                    valueSum={valueSum}\n                    valueKey={valueKey}\n                  />\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n}\n","import { Component } from \"react\";\n\nimport * as topojsonClient from \"topojson-client\";\nimport * as topojsonServer from \"topojson-server\";\nimport * as topojsonSimplify from \"topojson-simplify\";\nimport * as d3 from \"d3\";\n\nimport { Popup } from \"react-leaflet\";\nimport Box from \"@mui/material/Box\";\n\nimport { LRUCache } from \"../../base/BaseUtils.js\";\n\nimport GeoData from \"../../base/GeoData.js\";\nimport RegionView from \"../atoms/RegionView.js\";\nimport DataRowTable from \"../../nonstate/molecules/DataRowTable.js\";\nimport RegionLabel from \"../atoms/RegionLabel.js\";\n\nconst CACHE_VERSION = \"v5\";\nconst SIMPLIFY_WEIGHT = 0.0000001;\n\nfunction getRadiusFromPop(pop) {\n  return Math.sqrt(pop) * 25;\n}\nconst RADIUS_TO_GEO_UNITS = 0.00001015;\n\nasync function getGroupGeoJSONNoCache(regionIDs) {\n  const geoJSON = await Promise.all(\n    regionIDs.map(async function (regionID) {\n      return {\n        type: \"MultiPolygon\",\n        coordinates: await GeoData.getCoordinatesForRegion(regionID),\n      };\n    })\n  );\n\n  let topoJSON = topojsonServer.topology(geoJSON);\n  if (SIMPLIFY_WEIGHT) {\n    topoJSON = topojsonSimplify.presimplify(topoJSON);\n    topoJSON = topojsonSimplify.simplify(topoJSON, SIMPLIFY_WEIGHT);\n  }\n\n  const mergedGeoJSON = topojsonClient.merge(\n    topoJSON,\n    Object.values(topoJSON.objects)\n  );\n  return mergedGeoJSON;\n}\n\nasync function getGroupGeoJSON(regionIDs) {\n  const cacheKey = regionIDs.join(\":\") + CACHE_VERSION;\n  return await LRUCache.get(cacheKey, async function () {\n    return await getGroupGeoJSONNoCache(regionIDs);\n  });\n}\n\nexport default class MultiRegionView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { groupGeoJSONList: null };\n    this.isComponentMounted = false;\n  }\n\n  async componentDidMount() {\n    this.isComponentMounted = true;\n    const { groupToRegions } = this.props;\n\n    const groupGeoJSONList = await Promise.all(\n      Object.entries(groupToRegions).map(async function ([groupID, regionIDs]) {\n        return await getGroupGeoJSON(regionIDs);\n      })\n    );\n\n    if (this.isComponentMounted) {\n      this.setState({ groupGeoJSONList });\n    }\n  }\n\n  render() {\n    const { groupGeoJSONList } = this.state;\n\n    if (!groupGeoJSONList) {\n      return null;\n    }\n\n    const {\n      groupToRegions,\n      funcGetRegionStyle,\n      funcGetRegionPop,\n      groupTableIndex,\n      showDorlingCartogram,\n    } = this.props;\n\n    const groupIDs = Object.keys(groupToRegions);\n\n    const simulation = d3\n      .forceSimulation(groupGeoJSONList)\n      .force(\n        \"x\",\n        d3.forceX((d) => d3.geoCentroid(d)[1])\n      )\n      .force(\n        \"y\",\n        d3.forceY((d) => d3.geoCentroid(d)[0])\n      )\n      .force(\n        \"collide\",\n        d3.forceCollide(\n          (d, i) =>\n            RADIUS_TO_GEO_UNITS *\n            getRadiusFromPop(funcGetRegionPop(groupIDs[i]))\n        )\n      )\n      .stop();\n\n    for (let i = 0; i < 1000; i++) {\n      simulation.tick();\n    }\n\n    const nodes = simulation.nodes();\n\n    return Object.entries(groupToRegions).map(function (\n      [groupID, regionIDs],\n      iGroup\n    ) {\n      const pop = funcGetRegionPop(groupID);\n      const radius = getRadiusFromPop(pop);\n      const groupTableRow = groupTableIndex[groupID];\n\n      const renderedPopup = (\n        <Popup>\n          <Box style={{ fontSize: 24 }}>\n            <RegionLabel regionID={groupID} />\n          </Box>\n          <DataRowTable groupTableRow={groupTableRow} />\n        </Popup>\n      );\n\n      return (\n        <RegionView\n          key={`group-${groupID}`}\n          geoJSON={groupGeoJSONList[iGroup]}\n          style={funcGetRegionStyle(groupID)}\n          renderedPopup={renderedPopup}\n          showDorlingCartogram={showDorlingCartogram}\n          radius={radius}\n          center={[nodes[iGroup].x, nodes[iGroup].y]}\n        />\n      );\n    });\n  }\n}\n","import Paper from \"@mui/material/Paper\";\n\nimport ListSubheader from \"@mui/material/ListSubheader\";\nimport List from \"@mui/material/List\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\n\nimport MapIcon from \"@mui/icons-material/Map\";\n\nimport Ents from \"../../base/Ents.js\";\n\nexport default function MapPanel(props) {\n  const { activeMapID, onClickMap, mapInfoIndex } = props;\n\n  function renderListItem(mapID) {\n    const selected = activeMapID === mapID;\n\n    function onClick() {\n      onClickMap(mapID);\n    }\n\n    return (\n      <ListItemButton key={mapID} selected={selected} onClick={onClick}>\n        <ListItemIcon>\n          <MapIcon />\n        </ListItemIcon>\n        <ListItemText primary={Ents.getEntTypeLongName(mapID)} />\n      </ListItemButton>\n    );\n  }\n\n  return (\n    <Paper\n      sx={{\n        position: \"absolute\",\n        zIndex: 1000,\n\n        left: 20,\n        top: 20,\n        width: 200,\n        height: 300,\n      }}\n    >\n      <List dense subheader={<ListSubheader>Split Regions by</ListSubheader>}>\n        {Object.keys(mapInfoIndex).map(renderListItem)}\n      </List>\n    </Paper>\n  );\n}\n","import Paper from \"@mui/material/Paper\";\n\nimport ListSubheader from \"@mui/material/ListSubheader\";\nimport List from \"@mui/material/List\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Switch from \"@mui/material/Switch\";\n\nimport { COLOR_INFO_LIST } from \"../../base/GIG2.js\";\n\nexport default function ColorPanel(props) {\n  const {\n    activeMapColorTableName,\n    onClickMapColor,\n    showDorlingCartogram,\n    onClickShowDorlingCartogram,\n    onClickHideDorlingCartogram,\n  } = props;\n\n  function renderListItem({ label, tableName, Icon }) {\n    const selected = activeMapColorTableName === tableName;\n\n    function onClick() {\n      onClickMapColor(tableName);\n    }\n\n    return (\n      <ListItemButton key={label} selected={selected} onClick={onClick}>\n        <ListItemIcon>\n          <Icon />\n        </ListItemIcon>\n        <ListItemText primary={label} />\n      </ListItemButton>\n    );\n  }\n\n  function onChangeDorlingCartogram(e) {\n    if (e.target.checked) {\n      onClickShowDorlingCartogram();\n    } else {\n      onClickHideDorlingCartogram();\n    }\n  }\n\n  return (\n    <Paper\n      sx={{\n        position: \"absolute\",\n        zIndex: 1000,\n\n        left: 20,\n        bottom: 20,\n\n        width: 300,\n        height: 420,\n        overflow: \"scroll\",\n      }}\n    >\n      <FormGroup sx={{ marginLeft: 2 }}>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={showDorlingCartogram}\n              onChange={onChangeDorlingCartogram}\n            />\n          }\n          label=\"Dorling Cartogram\"\n        />\n      </FormGroup>\n      <List dense subheader={<ListSubheader>Color Map by</ListSubheader>}>\n        {COLOR_INFO_LIST.map(renderListItem)}\n      </List>\n    </Paper>\n  );\n}\n","import { Component } from \"react\";\n\nimport { MathX } from \"@nuuuwan/utils-js-dev\";\n\nimport GIG2, { DEFAULT_TABLE_NAME } from \"../../base/GIG2.js\";\nimport { ENT } from \"../../base/Ents.js\";\nimport RegionGroup from \"../../base/RegionGroup.js\";\nimport GeoMap from \"../molecules/GeoMap.js\";\nimport MainPanel from \"../molecules/MainPanel.js\";\nimport MultiRegionView from \"../../stateful/molecules/MultiRegionView.js\";\nimport MapPanel from \"../../nonstate/molecules/MapPanel.js\";\nimport ColorPanel from \"../../nonstate/molecules/ColorPanel.js\";\n\nconst DEFAULT_ZOOM = 8;\nconst DEFAULT_LATLNG = [7.9, 81.5];\nconst DEFAULT_MAP_ID = ENT.PROVINCE;\n\nconst BORDER_COLOR = \"white\";\nconst BORDER_WIDTH = 1;\n\nexport default class HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Data\n      activeMapID: DEFAULT_MAP_ID,\n      mapInfoIndex: undefined,\n\n      groupIndex: undefined,\n      activeGroupID: undefined,\n\n      tableIndexIndex: undefined,\n      activeMapColorTableName: DEFAULT_TABLE_NAME,\n\n      showDorlingCartogram: false,\n    };\n  }\n\n  async componentDidMount() {\n    const { activeMapID, activeMapColorTableName } = this.state;\n    await this.updateMap(activeMapID, activeMapColorTableName);\n  }\n\n  async updateMap(activeMapID, activeMapColorTableName) {\n    let mapInfoIndex = this.state.mapInfoIndex;\n    if (mapInfoIndex === undefined) {\n      mapInfoIndex = await RegionGroup.getMapInfoIndex();\n    }\n    const { groupIndex, groupToRegions } = mapInfoIndex[activeMapID];\n    const activeGroupID = Object.keys(groupIndex)[0];\n\n    let tableIndexIndex = this.state.tableIndexIndex;\n    if (tableIndexIndex === undefined) {\n      tableIndexIndex = await GIG2.getTableIndexIndex();\n    }\n\n    const activeTableIndex = tableIndexIndex[activeMapColorTableName];\n    const groupTableIndex = RegionGroup.getGroupTableIndex(\n      groupToRegions,\n      activeTableIndex\n    );\n\n    this.setState({\n      activeMapID,\n      activeMapColorTableName,\n\n      mapInfoIndex,\n      groupIndex,\n      groupToRegions,\n      activeGroupID,\n      tableIndexIndex,\n      activeTableIndex,\n      groupTableIndex,\n    });\n  }\n\n  async onClickMapColor(activeMapColorTableName) {\n    await this.updateMap(this.state.activeMapID, activeMapColorTableName);\n  }\n  async onClickMap(activeMapID) {\n    await this.updateMap(activeMapID, this.state.activeMapColorTableName);\n  }\n\n  onClickShowDorlingCartogram() {\n    this.setState({ showDorlingCartogram: true });\n  }\n  onClickHideDorlingCartogram() {\n    this.setState({ showDorlingCartogram: false });\n  }\n\n  render() {\n    const {\n      groupIndex,\n      groupToRegions,\n      activeGroupID,\n      mapInfoIndex,\n      tableIndexIndex,\n      activeMapColorTableName,\n      activeMapID,\n      activeTableIndex,\n      groupTableIndex,\n      showDorlingCartogram,\n    } = this.state;\n\n    if (!groupIndex) {\n      return \"Loading...\";\n    }\n\n    function funcGetRegionStyle(groupID) {\n      const regionRow = groupTableIndex[groupID];\n      let opacity = 0.1;\n      let color = \"gray\";\n\n      if (!regionRow) {\n        return {\n          fillColor: color,\n          fillOpacity: opacity,\n          color: BORDER_COLOR,\n          weight: BORDER_WIDTH,\n        };\n      }\n\n      const maxValueKey = GIG2.getMaxValueKey(regionRow);\n      const maxValueP = GIG2.getValueKeyP(regionRow, maxValueKey);\n\n      opacity = maxValueP;\n      color = GIG2.getTableRowColor(regionRow);\n\n      return {\n        fillColor: color,\n        fillOpacity: opacity,\n        color: BORDER_COLOR,\n        weight: BORDER_WIDTH,\n      };\n    }\n\n    function funcGetRegionPop(groupID) {\n      const regionRow = groupTableIndex[groupID];\n      return MathX.sum(Object.values(regionRow));\n    }\n\n    return (\n      <div>\n        <GeoMap center={DEFAULT_LATLNG} zoom={DEFAULT_ZOOM}>\n          <MultiRegionView\n            key={`multi-region-view-${activeMapID}-${showDorlingCartogram}`}\n            groupToRegions={groupToRegions}\n            activeGroupID={activeGroupID}\n            groupTableIndex={groupTableIndex}\n            funcGetRegionStyle={funcGetRegionStyle}\n            funcGetRegionPop={funcGetRegionPop}\n            showDorlingCartogram={showDorlingCartogram}\n          />\n        </GeoMap>\n        <MapPanel\n          activeMapID={activeMapID}\n          onClickMap={this.onClickMap.bind(this)}\n          mapInfoIndex={mapInfoIndex}\n        />\n        <ColorPanel\n          activeMapColorTableName={activeMapColorTableName}\n          onClickMapColor={this.onClickMapColor.bind(this)}\n          showDorlingCartogram={showDorlingCartogram}\n          onClickShowDorlingCartogram={this.onClickShowDorlingCartogram.bind(\n            this\n          )}\n          onClickHideDorlingCartogram={this.onClickHideDorlingCartogram.bind(\n            this\n          )}\n        />\n\n        <MainPanel\n          groupIndex={groupIndex}\n          groupToRegions={groupToRegions}\n          activeGroupID={activeGroupID}\n          activeTableIndex={activeTableIndex}\n          activeMapColorTableName={activeMapColorTableName}\n          tableIndexIndex={tableIndexIndex}\n          groupTableIndex={groupTableIndex}\n        />\n      </div>\n    );\n  }\n}\n","import \"./App.css\";\n\nimport HomePage from \"./stateful/pages/HomePage.js\";\n\nfunction App() {\n  return <HomePage />;\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}