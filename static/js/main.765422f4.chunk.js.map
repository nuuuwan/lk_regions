{"version":3,"sources":["constants/ColorConstants.js","constants/Constants.js","base/BaseUtils.js","constants/GIG2Constants.js","base/GIG2.js","base/Ents.js","base/GIG2Merge.js","base/RegionGroup.js","stateful/molecules/GeoMap.js","base/TableX.js","stateful/atoms/RegionLabel.js","nonstate/molecules/DataTable.js","nonstate/molecules/MapPropertiesView.js","stateful/molecules/MainPanel.js","base/GeoData.js","base/TopoJSONX.js","base/RegionStyle.js","nonstate/molecules/DataRowTable.js","stateful/atoms/RegionView.js","stateful/molecules/MultiRegionView.js","nonstate/molecules/MapPanel.js","nonstate/molecules/ColorPanel.js","stateful/pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["COLOR_SL_FLAG","SINHALA","TAMIL","TAMIL_REDDER","TAMIL_YELLOW","MUSLIM","BUDDHIST","COLOR_POLITICAL","FIELD_NAME_TO_COLOR","SLFP","PA","UPFA","SLPP","UNP","NDF","SJB","JVP","JJB","LSSP","TMVP","MNA","SLMC","EPDP","TULF","ACTC","ITAK","AITC","SLMP","other","others","bharatha","burgher","chetty","BLUE","indian_tamil","tamil","malay","moor","muslim","sinhalese","sri_lankan_tamil","buddhist","islam","hindu","roman_catholic","other_christian","christian","APP_NAME","LRU_CACHE","require","DataStructures","keyIDs","asyncFuncKeyToData","Promise","all","map","keyID","a","dataList","reduce","index","iKey","keyToValue","Object","entries","valueToKeys","key","value","push","Humanize","x","toPrecision","xSum","p","StatX","xList","n","length","MathX","sum","mean","Math","sqrt","variance","LRUCache","cacheKey","asyncFallback","hotItemInLRUCache","get","JSON","parse","hotItemInLocalStorage","localStorage","getItem","set","coldItemRaw","coldItem","stringify","setItem","QuotaExceededError","clear","KEY_OTHER","MERGE_ALIAS_MAP","COLOR_INFO_LIST","concat","electionYear","label","tableName","Icon","BallotIcon","PeopleAltIcon","sort","b","localeCompare","TABLE_NAMES","d","DEFAULT_TABLE_NAME","adhocValueKeyToColor","GIG2","url","WWW","tsv","getTable","table","valueKeys","getValueKeys","tableIndex","tableRow","cleanTableRow","includes","parseFloat","isNaN","getTableIndexIndexNoCache","buildIndex","getTableIndex","values","firstRow","getFirstRow","totalRow","keys","filter","cellKey","valueKey","maxValueKey","sumValues","getValueSum","Color","getRandomHSLA","getMaxValueKey","getValueKeyColor","ENT","COUNTRY","PROVINCE","DISTRICT","DSD","GND","PD","ED","MOH","LG","UNKNOWN","REGION_TYPES","ENT_TYPE_TO_LONG_NAME","Country","PARENT_TO_CHILD","undefined","Ents","entID","substring","regionType","entType","getEntsByType","ents","entIndex","ent","id","entTypes","getEntIndexByType","entIndexList","allEntIndex","iEnt","getEntType","json","parentType","parentID","childRegionType","StringX","toTitleCase","GIG2Merge","sortedNonOtherKeys","otherValueKeys","expandedTableRow","nonOtherKey","otherValueSum","mergedTableRow","mergedKey","mergedTableIndex","regionID","mergeKeysOnTableRow","mergeKeysOnTable","getTotalRow","valueSum","nonOtherValueKeysGlobal","nonOtherValueKeysLocalSet","tableRowValueSum","otherValueKeysLocal","add","Set","nonOtherValueKeys","Array","from","has","expandedTableIndex","expandOtherOnTableRow","RegionGroup","mapName","rawInfo","groupToRegions","groupIndex","groupID","name","mapID","regionEnts","groupList","regionEnt","group","regionIDs","getEntTypeLongName","getMapInfoForRegionType","forRegionTypes","getMapInfoForCustomMap","forCustomMaps","assign","activeTableIndex","rawGroupTableIndex","groupTableIndex","groupRow","mergeAndExpandOtherOnTable","GeoMap","this","props","center","zoom","MapContainer","TileLayer","ZoomControl","position","children","Component","TableCellHeader","TableCell","align","width","style","fontWeight","TableCellNumber","isMax","humanizedValue","number","humanizedPercent","percent","backgroundColor","color","opacity","styleText","borderRadius","padding","fontSize","RegionLabel","state","getEnt","setState","renderedName","Box","Typography","variant","sx","toUpperCase","DataTable","activeMapColorTableName","title","split","component","TableContainer","top","bottom","Table","stickyHeader","TableHead","TableRow","TableBody","iRow","dataRow","GroupInfoView","region","pop","PCorrectStats","popList","pCorrect","meanPop","limitLower","limitUpper","nCorrectSizeRegions","nRegions","display","MapPropertiesView","popTableIndex","tableIndexIndex","groupInfoList","parseInt","regionMin","regionMax","groupInfo","stdevPop","stdev","Paper","TAB","MAP_PROPS","DATA","DEFAULT_TAB","MainPanel","activeTab","event","newActiveTab","right","zIndex","TabContext","borderBottom","borderColor","TabList","onChange","onTabChange","bind","tab","Tab","TabPanel","isPointInPolygon","point","polygon","y","nIntersects","i","j","xi","yi","xj","yj","isPointInMultiMultiPolygon","multiMultiPolygon","multiPolygon","GeoData","getCoordinatesForRegion","geoDataList","regionToGeo","iRegion","getRegionTree","regionTree","regionMap","iRegionType","isFoundRegion","isPointInRegion","TopoJSONX","type","coordinates","geoJSON","topoJSON","topojsonServer","topojsonSimplify","mergedGeoJSON","topojsonClient","objects","join","getGroupGeoJSONNoCache","BORDER_COLOR","RegionStyle","groupTableRow","fillColor","fillOpacity","weight","getValueKeyP","getTableRowColor","DataRowTable","sortedEntries","getValueEntriesSortedByValue","RegionView","radius","renderedPopup","showDorlingCartogram","renderedCartogram","Circle","pathOptions","mapStyle","GeoJSON","data","onEachFeature","feature","layer","on","click","e","console","debug","getRadiusFromPop","MultiRegionView","groupGeoJSONList","isComponentMounted","getGroupGeoJSON","nodes","groupIDs","groupGeoJSONListSim","centroid","d3","groupPopList","simulation","force","stop","tick","iGroup","Popup","getRegionStyle","MapPanel","activeMapID","onClickMap","mapInfoIndex","left","height","List","dense","subheader","ListSubheader","selected","ListItemButton","onClick","ListItemIcon","ListItemText","primary","ColorPanel","onClickMapColor","onClickShowDorlingCartogram","onClickHideDorlingCartogram","overflow","FormGroup","marginLeft","FormControlLabel","control","Switch","checked","target","DEFAULT_LATLNG","DEFAULT_MAP_ID","HomePage","activeGroupID","updateMap","getMapInfoIndex","getTableIndexIndex","getGroupTableIndex","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.765422f4.chunk.js","sourcesContent":["export const COLOR_ACTIVE = \"red\";\nexport const COLOR_NOT_ACTIVE = \"white\";\n\nexport const COLOR_SL_FLAG = {\n  SINHALA: \"hsl(355, 63%, 34%)\",\n  TAMIL: \"hsl(21, 100%, 50%)\",\n  TAMIL_REDDER: \"hsl(5, 100%, 50%)\",\n  TAMIL_YELLOW: \"hsl(60, 100%, 50%)\",\n\n  MUSLIM: \"hsl(165, 100%, 17%)\",\n  BUDDHIST: \"hsl(43, 100%, 50%)\",\n};\n\nexport const COLOR_POLITICAL = {\n  SLFP: \"blue\",\n  UNP: \"green\",\n  JVP: \"red\",\n};\n\nexport const FIELD_NAME_TO_COLOR = {\n  // political parties\n  SLFP: COLOR_POLITICAL.SLFP,\n  PA: COLOR_POLITICAL.SLFP,\n  UPFA: COLOR_POLITICAL.SLFP,\n\n  SLPP: COLOR_SL_FLAG.SINHALA,\n\n  UNP: COLOR_POLITICAL.UNP,\n  NDF: COLOR_POLITICAL.UNP,\n  SJB: COLOR_POLITICAL.UNP,\n\n  JVP: COLOR_POLITICAL.JVP,\n  JJB: COLOR_POLITICAL.JVP,\n  LSSP: COLOR_POLITICAL.JVP,\n  TMVP: COLOR_POLITICAL.JVP,\n\n  MNA: COLOR_SL_FLAG.MUSLIM,\n  SLMC: COLOR_SL_FLAG.MUSLIM,\n\n  EPDP: COLOR_SL_FLAG.TAMIL_REDDER,\n  TULF: COLOR_SL_FLAG.TAMIL,\n  ACTC: COLOR_SL_FLAG.TAMIL_YELLOW,\n  ITAK: COLOR_SL_FLAG.TAMIL_YELLOW,\n  AITC: COLOR_SL_FLAG.TAMIL_REDDER,\n\n  SLMP: \"purple\",\n\n  other: \"gray\",\n  others: \"gray\",\n\n  // ethnicity_of_population\n  bharatha: \"cyan\",\n  burgher: \"purple\",\n  chetty: COLOR_SL_FLAG.BLUE,\n  indian_tamil: COLOR_SL_FLAG.TAMIL,\n  tamil: COLOR_SL_FLAG.TAMIL,\n  malay: COLOR_SL_FLAG.MUSLIM,\n  moor: COLOR_SL_FLAG.MUSLIM,\n  muslim: COLOR_SL_FLAG.MUSLIM,\n  sinhalese: COLOR_SL_FLAG.SINHALA,\n  sri_lankan_tamil: COLOR_SL_FLAG.TAMIL,\n\n  // religious_affiliation_of_population\n  buddhist: COLOR_SL_FLAG.BUDDHIST,\n  islam: COLOR_SL_FLAG.MUSLIM,\n  hindu: COLOR_SL_FLAG.TAMIL,\n  roman_catholic: \"purple\",\n  other_christian: \"blue\",\n  christian: \"purple\",\n};\n","export const APP_NAME = \"lk_regions\";\n","import { MathX } from \"@nuuuwan/utils-js-dev\";\nconst LRU = require(\"lru-cache\");\nconst LRU_CACHE = new LRU();\n\nexport class DataStructures {\n  static async buildIndex(keyIDs, asyncFuncKeyToData) {\n    const dataList = await Promise.all(\n      keyIDs.map(async function (keyID) {\n        return await asyncFuncKeyToData(keyID);\n      })\n    );\n\n    return keyIDs.reduce(function (index, keyID, iKey) {\n      index[keyID] = dataList[iKey];\n      return index;\n    }, {});\n  }\n\n  static invertDict(keyToValue) {\n    return Object.entries(keyToValue).reduce(function (\n      valueToKeys,\n      [key, value]\n    ) {\n      if (value) {\n        if (!valueToKeys[value]) {\n          valueToKeys[value] = [];\n        }\n        valueToKeys[value].push(key);\n      }\n      return valueToKeys;\n    },\n    {});\n  }\n}\n\nconst DEFAULT_PRECISION = 3;\n\nexport class Humanize {\n  static number(x) {\n    if (!x) {\n      return \"-\";\n    }\n\n    if (x > 1_000_000) {\n      return (x / 1_000_000).toPrecision(DEFAULT_PRECISION) + \"M\";\n    }\n    if (x > 1_000) {\n      return (x / 1_000).toPrecision(DEFAULT_PRECISION) + \"K\";\n    }\n    return x;\n  }\n\n  static percent(x, xSum) {\n    if (!xSum || !x) {\n      return \"-\";\n    }\n    const p = x / xSum;\n    if (p < 0.01) {\n      return \"<1%\";\n    }\n    return (p * 100.0).toPrecision(DEFAULT_PRECISION) + \"%\";\n  }\n}\n\nexport class StatX {\n  static mean(xList) {\n    const n = xList.length;\n    return MathX.sum(xList) / n;\n  }\n\n  static variance(xList) {\n    const n = xList.length;\n    const eX2 = MathX.sum(xList.map((x) => x * x)) / n;\n    const mean = StatX.mean(xList);\n    return eX2 - mean;\n  }\n\n  static stdev(xList) {\n    return Math.sqrt(StatX.variance(xList));\n  }\n}\n\nexport class LRUCache {\n  static async get(cacheKey, asyncFallback) {\n    const hotItemInLRUCache = LRU_CACHE.get(cacheKey);\n    if (hotItemInLRUCache) {\n      return JSON.parse(hotItemInLRUCache);\n    }\n\n    const hotItemInLocalStorage = localStorage.getItem(cacheKey);\n    if (hotItemInLocalStorage) {\n      LRU_CACHE.set(cacheKey, hotItemInLocalStorage);\n      return JSON.parse(hotItemInLocalStorage);\n    }\n\n    const coldItemRaw = await asyncFallback();\n    const coldItem = JSON.stringify(coldItemRaw);\n    LRU_CACHE.set(cacheKey, coldItem);\n\n    try {\n      localStorage.setItem(cacheKey, coldItem);\n    } catch (QuotaExceededError) {\n      localStorage.clear();\n    }\n    return coldItemRaw;\n  }\n}\n","import PeopleAltIcon from \"@mui/icons-material/PeopleAlt\";\nimport BallotIcon from \"@mui/icons-material/Ballot\";\n\nexport const ID_FIELD_KEY = \"entity_id\";\nexport const OTHER_LIMIT_GLOBAL = 0.01;\nexport const OTHER_LIMIT_LOCAL = 0.2;\nexport const KEY_OTHER = \"other\";\n\nexport const MERGE_ALIAS_MAP = {\n  moor: \"muslim\",\n  malay: \"muslim\",\n  sri_lankan_tamil: \"tamil\",\n  indian_tamil: \"tamil\",\n  roman_catholic: \"christian\",\n  other_christian: \"christian\",\n};\n\nconst PRESIDENTIAL_ELECTION_YEAR_LIST = [\n  2019, 2015, 2010, 2005, 1999, 1994, 1988, 1982,\n];\n\nconst PARLIAMENTARY_ELECTION_YEAR_LIST = [\n  1989, 1994, 2000, 2001, 2004, 2010, 2015, 2020,\n];\n\nexport const COLOR_INFO_LIST = []\n  .concat(\n    // Presidential Elections\n    PRESIDENTIAL_ELECTION_YEAR_LIST.map(function (electionYear) {\n      return {\n        label: `${electionYear} Presidential Election`,\n        tableName: `regions_ec.${electionYear}_election_presidential.result`,\n        Icon: BallotIcon,\n      };\n    }),\n\n    // Parliamentary Elections\n    PARLIAMENTARY_ELECTION_YEAR_LIST.map(function (electionYear) {\n      return {\n        label: `${electionYear} Parliamentary Election`,\n        tableName: `regions_ec.${electionYear}_election_parliamentary.result`,\n        Icon: BallotIcon,\n      };\n    }),\n\n    // 2012 Census\n    [\n      {\n        label: \"Ethnicity\",\n        tableName: \"regions.2012_census.ethnicity_of_population\",\n        Icon: PeopleAltIcon,\n      },\n      {\n        label: \"Religion\",\n        tableName: \"regions.2012_census.religious_affiliation_of_population\",\n        Icon: PeopleAltIcon,\n      },\n    ]\n  )\n  .sort((a, b) => -a.tableName.localeCompare(b.tableName));\n\nexport const TABLE_NAMES = COLOR_INFO_LIST.map((d) => d.tableName);\nexport const DEFAULT_TABLE_NAME = TABLE_NAMES[0];\n","import { MathX, Color, WWW } from \"@nuuuwan/utils-js-dev\";\nimport { FIELD_NAME_TO_COLOR } from \"../constants/ColorConstants.js\";\nimport { APP_NAME } from \"../constants/Constants.js\";\nimport { LRUCache, DataStructures } from \"./BaseUtils.js\";\n\nimport {\n  ID_FIELD_KEY,\n  KEY_OTHER,\n  TABLE_NAMES,\n} from \"../constants/GIG2Constants.js\";\n\nlet adhocValueKeyToColor = {};\n\nexport default class GIG2 {\n  // Multi-Table Functions\n  static async getTable(tableName) {\n    const url = `/${APP_NAME}/data/gig2/${tableName}.tsv`;\n    return await WWW.tsv(url);\n  }\n\n  static async getTableIndex(tableName) {\n    const table = await GIG2.getTable(tableName);\n    const valueKeys = GIG2.getValueKeys(table[0]);\n    return table.reduce(function (tableIndex, tableRow) {\n      tableIndex[tableRow[ID_FIELD_KEY]] = Object.entries(tableRow).reduce(\n        function (cleanTableRow, [key, value]) {\n          if (valueKeys.includes(key)) {\n            value = parseFloat(value);\n            if (isNaN(value)) {\n              value = 0;\n            }\n          }\n          cleanTableRow[key] = value;\n          return cleanTableRow;\n        },\n        {}\n      );\n      return tableIndex;\n    }, {});\n  }\n\n  static async getTableIndexIndex() {\n    return await LRUCache.get(\n      \"getTableIndexIndex\",\n      GIG2.getTableIndexIndexNoCache\n    );\n  }\n\n  static async getTableIndexIndexNoCache() {\n    return await DataStructures.buildIndex(TABLE_NAMES, GIG2.getTableIndex);\n  }\n\n  // Table Functions\n\n  static getFirstRow(tableIndex) {\n    return Object.values(tableIndex)[0];\n  }\n\n  static getTotalRow(tableIndex) {\n    const firstRow = GIG2.getFirstRow(tableIndex);\n    const valueKeys = GIG2.getValueKeys(firstRow);\n    return valueKeys.reduce(function (totalRow, key) {\n      totalRow[key] = MathX.sum(\n        Object.values(tableIndex).map((tableRow) => tableRow[key])\n      );\n      return totalRow;\n    }, {});\n  }\n\n  // Row Functions\n\n  static getValueKeys(tableRow) {\n    const valueCellKeys = Object.keys(tableRow).filter(\n      (cellKey) =>\n        !(\n          cellKey.includes(\"total_\") ||\n          cellKey.includes(\"_id\") ||\n          cellKey.includes(\"result_ut\") ||\n          cellKey.includes(\"valid\") ||\n          cellKey.includes(\"rejected\") ||\n          cellKey.includes(\"polled\") ||\n          cellKey.includes(\"electors\")\n        )\n    );\n    return valueCellKeys;\n  }\n\n  static getValueEntriesSortedByValue(tableRow) {\n    const valueKeys = GIG2.getValueKeys(tableRow);\n    return valueKeys\n      .map((valueKey) => [valueKey, tableRow[valueKey]])\n      .sort((a, b) => b[1] - a[1]);\n  }\n\n  static getMaxValueKey(tableRow) {\n    const valueKeys = GIG2.getValueKeys(tableRow);\n    const maxValueKey = valueKeys.reduce(function (maxValueKey, valueKey) {\n      if (valueKey !== KEY_OTHER) {\n        if (tableRow[maxValueKey] < tableRow[valueKey]) {\n          maxValueKey = valueKey;\n        }\n      }\n      return maxValueKey;\n    }, valueKeys[0]);\n    return maxValueKey;\n  }\n\n  static getValueKeyP(tableRow, valueKey) {\n    const sumValues = GIG2.getValueSum(tableRow);\n    return tableRow[valueKey] / sumValues;\n  }\n\n  static getValueSum(tableRow) {\n    const valueKeys = GIG2.getValueKeys(tableRow);\n    return MathX.sum(valueKeys.map((valueKey) => tableRow[valueKey]));\n  }\n\n  // Row Functions - Color\n\n  static getValueKeyColor(valueKey) {\n    if (FIELD_NAME_TO_COLOR[valueKey]) {\n      return FIELD_NAME_TO_COLOR[valueKey];\n    }\n    if (!adhocValueKeyToColor[valueKey]) {\n      adhocValueKeyToColor[valueKey] = Color.getRandomHSLA();\n    }\n    return adhocValueKeyToColor[valueKey];\n  }\n\n  static getTableRowColor(tableRow) {\n    const maxValueKey = GIG2.getMaxValueKey(tableRow);\n    return GIG2.getValueKeyColor(maxValueKey);\n  }\n}\n","import { WWW, StringX } from \"@nuuuwan/utils-js-dev\";\nimport { APP_NAME } from \"../constants/Constants.js\";\n\nexport const REGION_ID_LK = \"LK\";\nexport const ENT = {\n  COUNTRY: \"country\",\n  PROVINCE: \"province\",\n  DISTRICT: \"district\",\n  DSD: \"dsd\",\n  GND: \"gnd\",\n  PD: \"pd\",\n  ED: \"ed\",\n  MOH: \"moh\",\n  LG: \"lg\",\n  UNKNOWN: \"unknown\",\n};\n\nexport const REGION_TYPES = Object.values(ENT);\n\nexport const ENT_TYPE_TO_LONG_NAME = {\n  [ENT.Country]: \"Country\",\n  [ENT.PROVINCE]: \"Province\",\n  [ENT.DISTRICT]: \"District\",\n  [ENT.DSD]: \"Divisional Secretariat Division\",\n  [ENT.GND]: \"Grama Niladhari Division\",\n  [ENT.PD]: \"Polling Division\",\n  [ENT.ED]: \"Electoral District\",\n  [ENT.MOH]: \"Medical Officer of Health Area\",\n  [ENT.LG]: \"Local Authority Area\",\n};\n\nexport const PARENT_TO_CHILD = {\n  [ENT.COUNTRY]: ENT.PROVINCE,\n  [ENT.PROVINCE]: ENT.DISTRICT,\n  [ENT.DISTRICT]: ENT.DSD,\n  [ENT.DSD]: ENT.GND,\n  [ENT.GND]: undefined,\n  [ENT.PD]: undefined,\n  [ENT.ED]: [ENT.PD],\n};\n\nexport default class Ents {\n  static getEntType(entID) {\n    if (entID.substring(0, 2) === \"LK\") {\n      const entIDLength = entID.length;\n      switch (entIDLength) {\n        case 2:\n          return ENT.COUNTRY;\n        case 4:\n          return ENT.PROVINCE;\n        case 5:\n          return ENT.DISTRICT;\n        case 7:\n          return ENT.DSD;\n        case 10:\n          return ENT.GND;\n        default:\n          return ENT.UNKNOWN;\n      }\n    }\n    if (entID.substring(0, 2) === \"EC\") {\n      const entIDLength = entID.length;\n      switch (entIDLength) {\n        case 5:\n          return ENT.ED;\n        case 6:\n          return ENT.PD;\n        default:\n          return ENT.UNKNOWN;\n      }\n    }\n\n    if (entID.substring(0, 2) === \"LG\") {\n      return ENT.LG;\n    }\n\n    if (entID.substring(0, 3) === \"MOH\") {\n      return ENT.MOH;\n    }\n    return ENT.UNKNOWN;\n  }\n  static getRegionName(regionType) {\n    return ENT_TYPE_TO_LONG_NAME[regionType];\n  }\n  static async getEntsByType(entType) {\n    const url = `/${APP_NAME}/data/ents/${entType}.tsv`;\n    return await WWW.tsv(url);\n  }\n\n  static async getEntIndexByType(entType) {\n    const ents = await Ents.getEntsByType(entType);\n    return ents.reduce(function (entIndex, ent) {\n      entIndex[ent.id] = ent;\n      return entIndex;\n    }, {});\n  }\n\n  static async getAllEntIndex() {\n    const entTypes = REGION_TYPES;\n    const entIndexList = await Promise.all(\n      entTypes.map(async function (entType) {\n        return await Ents.getEntIndexByType(entType);\n      })\n    );\n\n    return entTypes.reduce(function (allEntIndex, entType, iEnt) {\n      allEntIndex[entType] = entIndexList[iEnt];\n      return allEntIndex;\n    }, {});\n  }\n\n  static async getEnt(entID) {\n    const entType = Ents.getEntType(entID);\n    const entIndex = await Ents.getEntIndexByType(entType);\n    let ent = entIndex[entID];\n    if (!ent) {\n      return null;\n    }\n    if (ent[\"centroid\"]) {\n      ent[\"centroid\"] = JSON.parse(ent[\"centroid\"]);\n    }\n    return ent;\n  }\n\n  static async getParentToChildMap() {\n    const url = `data/ents/parent_to_child_map.json`;\n    return await WWW.json(url);\n  }\n\n  static getChildType(parentType) {\n    return PARENT_TO_CHILD[parentType];\n  }\n\n  static async getChildIDs(parentID, childRegionType) {\n    const ents = await Ents.getEntsByType(childRegionType);\n    return ents\n      .map((ent) => ent.id)\n      .filter((entID) => entID.includes(parentID) || parentID === \"LK\");\n  }\n\n  static getEntTypeLongName(entType) {\n    return ENT_TYPE_TO_LONG_NAME[entType]\n      ? ENT_TYPE_TO_LONG_NAME[entType]\n      : StringX.toTitleCase(entType);\n  }\n}\n","import { MathX } from \"@nuuuwan/utils-js-dev\";\nimport GIG2 from \"./GIG2.js\";\n\nimport {\n  OTHER_LIMIT_GLOBAL,\n  OTHER_LIMIT_LOCAL,\n  MERGE_ALIAS_MAP,\n  KEY_OTHER,\n} from \"../constants/GIG2Constants.js\";\n\nexport default class GIG2Merge {\n  static expandOtherOnTableRow(tableRow, sortedNonOtherKeys, otherValueKeys) {\n    let expandedTableRow = sortedNonOtherKeys.reduce(function (\n      expandedTableRow,\n      nonOtherKey\n    ) {\n      expandedTableRow[nonOtherKey] = tableRow[nonOtherKey];\n      return expandedTableRow;\n    },\n    {});\n\n    const otherValueSum = MathX.sum(\n      otherValueKeys.map((valueKey) => tableRow[valueKey])\n    );\n    expandedTableRow[KEY_OTHER] = otherValueSum;\n\n    return expandedTableRow;\n  }\n\n  static mergeKeysOnTableRow(tableRow) {\n    return Object.entries(tableRow).reduce(function (\n      mergedTableRow,\n      [key, value]\n    ) {\n      const mergedKey = MERGE_ALIAS_MAP[key] ? MERGE_ALIAS_MAP[key] : key;\n      if (!mergedTableRow[mergedKey]) {\n        mergedTableRow[mergedKey] = 0;\n      }\n      mergedTableRow[mergedKey] += value;\n      return mergedTableRow;\n    },\n    {});\n  }\n\n  static mergeKeysOnTable(tableIndex) {\n    return Object.entries(tableIndex).reduce(function (\n      mergedTableIndex,\n      [regionID, tableRow]\n    ) {\n      mergedTableIndex[regionID] = GIG2Merge.mergeKeysOnTableRow(tableRow);\n      return mergedTableIndex;\n    },\n    {});\n  }\n\n  static mergeAndExpandOtherOnTable(tableIndex) {\n    const mergedTableIndex = GIG2Merge.mergeKeysOnTable(tableIndex);\n\n    const totalRow = GIG2.getTotalRow(mergedTableIndex);\n    const valueKeys = GIG2.getValueKeys(totalRow);\n    const valueSum = GIG2.getValueSum(totalRow);\n\n    const nonOtherValueKeysGlobal = valueKeys.filter(\n      (valueKey) =>\n        totalRow[valueKey] / valueSum >= OTHER_LIMIT_GLOBAL &&\n        valueKey !== KEY_OTHER\n    );\n    const nonOtherValueKeysLocalSet = Object.values(mergedTableIndex).reduce(\n      function (nonOtherValueKeysLocalSet, tableRow) {\n        const tableRowValueSum = GIG2.getValueSum(tableRow);\n        return valueKeys.reduce(function (otherValueKeysLocal, valueKey) {\n          if (\n            tableRow[valueKey] / tableRowValueSum >= OTHER_LIMIT_LOCAL &&\n            valueKey !== KEY_OTHER\n          ) {\n            nonOtherValueKeysLocalSet.add(valueKey);\n          }\n          return nonOtherValueKeysLocalSet;\n        });\n      },\n      new Set(nonOtherValueKeysGlobal)\n    );\n    const nonOtherValueKeys = Array.from(nonOtherValueKeysLocalSet);\n\n    const otherValueKeys = valueKeys.filter(\n      (valueKey) => !nonOtherValueKeysLocalSet.has(valueKey)\n    );\n\n    const sortedNonOtherKeys = nonOtherValueKeys\n      .map(function (key) {\n        return { key, value: totalRow[key] };\n      })\n      .sort((a, b) => b.value - a.value)\n      .map((x) => x.key);\n\n    const expandedTableIndex = Object.entries(mergedTableIndex).reduce(\n      function (expandedTableIndex, [regionID, tableRow]) {\n        expandedTableIndex[regionID] = GIG2Merge.expandOtherOnTableRow(\n          tableRow,\n          sortedNonOtherKeys,\n          otherValueKeys\n        );\n        return expandedTableIndex;\n      },\n      {}\n    );\n    return expandedTableIndex;\n  }\n}\n","import { WWW } from \"@nuuuwan/utils-js-dev\";\n\nimport { APP_NAME } from \"../constants/Constants.js\";\nimport Ents, { ENT } from \"./Ents.js\";\nimport GIG2 from \"./GIG2.js\";\nimport GIG2Merge from \"./GIG2Merge.js\";\nimport { DataStructures } from \"./BaseUtils.js\";\n\nexport default class RegionGroup {\n  static async getMapInfoForCustomMap(mapName) {\n    const url = `/${APP_NAME}/data/custom_maps/${mapName}.json`;\n    const rawInfo = await WWW.json(url);\n\n    const groupToRegions = rawInfo[\"label_to_region_ids\"];\n    const groupIndex = Object.keys(groupToRegions).reduce(function (\n      groupIndex,\n      groupID\n    ) {\n      groupIndex[groupID] = {\n        groupID: groupID,\n        name: groupID,\n      };\n      return groupIndex;\n    },\n    {});\n\n    return {\n      mapID: mapName,\n      name: mapName,\n      groupIndex,\n      groupToRegions,\n    };\n  }\n\n  static async getMapInfoForRegionType(regionType) {\n    const regionEnts = await Ents.getEntsByType(regionType);\n\n    const groupList = regionEnts.map(function (regionEnt) {\n      return {\n        groupID: regionEnt.id,\n        name: regionEnt.name,\n      };\n    });\n\n    const groupIndex = groupList.reduce(function (groupIndex, group) {\n      groupIndex[group.groupID] = group;\n      return groupIndex;\n    }, {});\n\n    const regionIDs = regionEnts\n      .map((regionEnt) => regionEnt.id)\n      .filter(function (regionID) {\n        return regionType !== ENT.PD || regionID.substring(5) !== \"P\";\n      });\n\n    const groupToRegions = regionIDs.reduce(function (\n      groupToRegions,\n      regionID\n    ) {\n      groupToRegions[regionID] = [regionID];\n      return groupToRegions;\n    },\n    {});\n\n    return {\n      mapID: \"region_type_\" + regionType,\n      name: \"By \" + Ents.getEntTypeLongName(regionType),\n      groupIndex,\n      groupToRegions,\n    };\n  }\n\n  static async getMapInfoIndex() {\n    const forRegionTypes = await DataStructures.buildIndex(\n      [ENT.PROVINCE, ENT.DISTRICT, ENT.DSD, ENT.ED, ENT.PD],\n      RegionGroup.getMapInfoForRegionType\n    );\n\n    const forCustomMaps = await DataStructures.buildIndex(\n      [\"sl_new_pds.lk-FINAL.compressed\"],\n      RegionGroup.getMapInfoForCustomMap\n    );\n\n    return Object.assign({}, forRegionTypes, forCustomMaps);\n  }\n\n  static getGroupTableIndex(groupToRegions, activeTableIndex) {\n    const valueKeys = GIG2.getValueKeys(GIG2.getFirstRow(activeTableIndex));\n\n    const rawGroupTableIndex = Object.entries(groupToRegions).reduce(function (\n      groupTableIndex,\n      [groupID, regionIDs]\n    ) {\n      groupTableIndex[groupID] = regionIDs.reduce(function (\n        groupRow,\n        regionID\n      ) {\n        if (!activeTableIndex[regionID]) {\n          return groupRow;\n        }\n        return Object.entries(activeTableIndex[regionID]).reduce(function (\n          groupRow,\n          [key, value]\n        ) {\n          if (valueKeys.includes(key)) {\n            if (!groupRow[key]) {\n              groupRow[key] = value;\n            } else {\n              groupRow[key] += value;\n            }\n          } else {\n            groupRow[key] = value;\n          }\n          return groupRow;\n        },\n        groupRow);\n      },\n      {});\n      return groupTableIndex;\n    },\n    {});\n\n    const groupTableIndex =\n      GIG2Merge.mergeAndExpandOtherOnTable(rawGroupTableIndex);\n\n    return groupTableIndex;\n  }\n}\n","import { Component } from \"react\";\nimport { MapContainer, TileLayer, ZoomControl } from \"react-leaflet\";\n\nimport \"./GeoMap.css\";\n\nconst URL_FORMAT = \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\";\n\nexport default class GeoMap extends Component {\n  render() {\n    const { center, zoom } = this.props;\n    return (\n      <MapContainer center={center} zoom={zoom}>\n        <TileLayer url={URL_FORMAT} />\n        <ZoomControl zoom={zoom} position=\"bottomright\" />\n        {this.props.children}\n      </MapContainer>\n    );\n  }\n}\n","import * as React from \"react\";\nimport TableCell from \"@mui/material/TableCell\";\n\nimport { StringX } from \"@nuuuwan/utils-js-dev\";\n\nimport { Humanize } from \"./BaseUtils.js\";\nimport GIG2 from \"./GIG2.js\";\n\nexport function TableCellHeader(props) {\n  const { valueKey } = props;\n  const style = { fontWeight: 800 };\n  return (\n    <TableCell\n      key={\"header-\" + valueKey}\n      align=\"right\"\n      width=\"30\"\n      style={style}\n    >\n      {StringX.toTitleCase(valueKey)}\n    </TableCell>\n  );\n}\n\nexport function TableCellNumber(props) {\n  const { value, valueSum, valueKey, isMax } = props;\n  const humanizedValue = Humanize.number(value);\n  const humanizedPercent = Humanize.percent(value, valueSum);\n  const p = value / valueSum;\n\n  let backgroundColor = \"white\";\n  let color = \"black\";\n  if (isMax) {\n    backgroundColor = GIG2.getValueKeyColor(valueKey);\n    color = \"white\";\n  }\n\n  let opacity = 0.2;\n  if (p > 0.5) {\n    opacity = p;\n  } else if (p > 0.1) {\n    opacity = 0.5;\n  } else if (p > 0.01) {\n    opacity = 0.4;\n  }\n\n  const styleText = {\n    backgroundColor,\n    opacity,\n    borderRadius: 3,\n    padding: 3,\n  };\n\n  return (\n    <TableCell align=\"right\">\n      <div style={styleText}>\n        <div style={{ fontSize: 15, color }}>{humanizedPercent}</div>\n        <div style={{ fontSize: 9, color }}>{humanizedValue}</div>\n      </div>\n    </TableCell>\n  );\n}\n","import { Component } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Ents, { ENT } from \"../../base/Ents.js\";\n\nexport default class RegionLabel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { regionEnt: undefined };\n  }\n  async componentDidMount() {\n    const { regionID } = this.props;\n    const regionType = Ents.getEntType(regionID);\n    if (regionType !== ENT.UNKNOWN) {\n      const regionEnt = await Ents.getEnt(regionID);\n      this.setState({ regionEnt });\n    }\n  }\n\n  render() {\n    const { regionEnt } = this.state;\n    const { regionID } = this.props;\n    const regionType = Ents.getEntType(regionID);\n\n    const renderedName = regionEnt ? regionEnt.name : regionID;\n\n    return (\n      <Box>\n        <Typography variant=\"body2\" sx={{ fontSize: \"100%\", color: \"black\" }}>\n          {renderedName}\n        </Typography>\n        <Typography variant=\"body2\" sx={{ fontSize: \"60%\", color: \"gray\" }}>\n          {regionType.toUpperCase()}\n        </Typography>\n      </Box>\n    );\n  }\n}\n","import * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\n\nimport { StringX } from \"@nuuuwan/utils-js-dev\";\n\nimport { TableCellHeader, TableCellNumber } from \"../../base/TableX.js\";\nimport RegionLabel from \"../../stateful/atoms/RegionLabel.js\";\nimport GIG2 from \"../../base/GIG2.js\";\n\nexport default function DataTable(props) {\n  const { groupTableIndex, activeMapColorTableName } = props;\n  const valueKeys = GIG2.getValueKeys(GIG2.getFirstRow(groupTableIndex));\n\n  const title = StringX.toTitleCase(activeMapColorTableName.split(\".\")[1]);\n\n  return (\n    <Box>\n      <Typography variant=\"subtitle1\" component=\"div\">\n        {title}\n      </Typography>\n      <TableContainer\n        sx={{ position: \"absolute\", top: 100, bottom: 20, width: 560 }}\n      >\n        <Table stickyHeader padding=\"none\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"right\" width=\"5\" />\n              <TableCell align=\"right\" width=\"80\" />\n              {valueKeys.map((valueKey) => (\n                <TableCellHeader valueKey={valueKey} />\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {Object.entries(groupTableIndex).map(function (\n              [groupID, dataRow],\n              iRow\n            ) {\n              const valueSum = GIG2.getValueSum(dataRow);\n              const maxValueKey = GIG2.getMaxValueKey(dataRow);\n              return (\n                <TableRow key={groupID}>\n                  <TableCell>\n                    <Typography variant=\"caption\">{`${iRow + 1}.`}</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <RegionLabel regionID={groupID} />\n                  </TableCell>\n                  {valueKeys.map(function (valueKey) {\n                    const isMax = maxValueKey === valueKey;\n                    return (\n                      <TableCellNumber\n                        key={groupID + \"-\" + valueKey}\n                        value={dataRow[valueKey]}\n                        valueSum={valueSum}\n                        valueKey={valueKey}\n                        isMax={isMax}\n                      />\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n}\n","import Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport Paper from \"@mui/material/Paper\";\n\nimport { MathX } from \"@nuuuwan/utils-js-dev\";\n\nimport { Humanize, StatX } from \"../../base/BaseUtils.js\";\n\nconst POP_TABLE_NAME = \"regions.2012_census.ethnicity_of_population\";\nconst POP_FIELD_KEY = \"total_population\";\n\nfunction GroupInfoView(props) {\n  const { region, title } = props;\n  return (\n    <Box key={region.groupID}>\n      <Typography variant=\"h5\">{Humanize.number(region.pop)}</Typography>\n      <Typography variant=\"h7\">{region.groupID}</Typography>\n      <Typography variant=\"caption\">{title}</Typography>\n    </Box>\n  );\n}\n\nfunction PCorrectStats(props) {\n  const { popList, pCorrect } = props;\n\n  const meanPop = StatX.mean(popList);\n  const limitLower = meanPop / (1 + pCorrect);\n  const limitUpper = meanPop * (1 + pCorrect);\n\n  const correctSizeRegions = popList.filter(\n    (pop) => limitLower <= pop && limitUpper >= pop\n  );\n  const nCorrectSizeRegions = correctSizeRegions.length;\n  const nRegions = popList.length;\n\n  return (\n    <>\n      <Box>\n        <Typography variant=\"h5\" display=\"inline\">\n          {Humanize.percent(nCorrectSizeRegions, nRegions)}\n        </Typography>\n        <Typography variant=\"h7\" display=\"inline\">\n          {\" \" + nCorrectSizeRegions}\n        </Typography>\n      </Box>\n      <Typography variant=\"caption\">\n        Regions within {Humanize.percent(pCorrect, 1)} of Mean Population (\n        {Humanize.number(limitLower)} to {Humanize.number(limitUpper)})\n      </Typography>\n    </>\n  );\n}\n\nexport default function MapPropertiesView(props) {\n  const { groupToRegions, tableIndexIndex } = props;\n  const popTableIndex = tableIndexIndex[POP_TABLE_NAME];\n\n  const nRegions = Object.keys(groupToRegions).length;\n\n  const groupInfoList = Object.entries(groupToRegions)\n    .map(function ([groupID, regionIDs]) {\n      const pop = MathX.sum(\n        regionIDs.map(function (regionID) {\n          if (popTableIndex[regionID]) {\n            return parseInt(popTableIndex[regionID][POP_FIELD_KEY]);\n          } else {\n            return 0;\n          }\n        })\n      );\n      return {\n        groupID,\n        pop,\n      };\n    })\n    .sort(function (a, b) {\n      return a.pop - b.pop;\n    });\n\n  const regionMin = groupInfoList[0];\n  const regionMax = groupInfoList[nRegions - 1];\n\n  const popList = groupInfoList.map((groupInfo) => groupInfo.pop);\n\n  const meanPop = StatX.mean(popList);\n  const stdevPop = StatX.stdev(popList);\n\n  return (\n    <Box>\n      <Typography variant=\"h5\">{nRegions}</Typography>\n      <Typography variant=\"caption\">Number of Regions</Typography>\n\n      <Paper sx={{ p: 2 }}>\n        <Typography variant=\"h4\">{\"Population Balance\"}</Typography>\n\n        <Box>\n          <Typography variant=\"h5\" display=\"inline\">\n            {Humanize.number(meanPop)}\n          </Typography>\n          <Typography variant=\"h7\" display=\"inline\">\n            {\" ± \" + Humanize.number(stdevPop * 2)}\n          </Typography>\n        </Box>\n        <Typography variant=\"caption\">\n          Mean Population ± 3 Standard Deviations\n        </Typography>\n\n        <GroupInfoView title=\"Smallest Region\" region={regionMin} />\n        <GroupInfoView title=\"Largest Region\" region={regionMax} />\n\n        <Box>\n          <Typography variant=\"h5\" display=\"inline\">\n            {(regionMax.pop / regionMin.pop).toPrecision(2) + \" : 1\"}\n          </Typography>\n        </Box>\n        <Typography variant=\"caption\">Largest : Smallest</Typography>\n\n        <PCorrectStats popList={popList} pCorrect={0.1} />\n        <PCorrectStats popList={popList} pCorrect={0.2} />\n        <PCorrectStats popList={popList} pCorrect={0.4} />\n      </Paper>\n    </Box>\n  );\n}\n","import { Component } from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport Tab from \"@mui/material/Tab\";\nimport TabContext from \"@mui/lab/TabContext\";\nimport TabList from \"@mui/lab/TabList\";\nimport TabPanel from \"@mui/lab/TabPanel\";\n\nimport DataTable from \"../../nonstate/molecules/DataTable.js\";\nimport MapPropertiesView from \"../../nonstate/molecules/MapPropertiesView.js\";\n\nconst TAB = {\n  MAP_PROPS: \"Map Properties\",\n  DATA: \"Data\",\n};\nconst DEFAULT_TAB = TAB.MAP_PROPS;\n\nexport default class MainPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { activeTab: DEFAULT_TAB };\n  }\n\n  onTabChange(event, newActiveTab) {\n    this.setState({ activeTab: newActiveTab });\n  }\n\n  render() {\n    const {\n      groupToRegions,\n      groupTableIndex,\n      activeMapColorTableName,\n      tableIndexIndex,\n    } = this.props;\n    const { activeTab } = this.state;\n\n    return (\n      <Paper\n        sx={{\n          position: \"absolute\",\n          top: 20,\n          right: 20,\n          bottom: 20,\n          width: 600,\n          zIndex: 1000,\n        }}\n      >\n        <TabContext value={activeTab}>\n          <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n            <TabList\n              onChange={this.onTabChange.bind(this)}\n              aria-label=\"lab API tabs example\"\n            >\n              {Object.values(TAB).map(function (tab) {\n                return <Tab key={tab} label={tab} value={tab} />;\n              })}\n            </TabList>\n          </Box>\n\n          <TabPanel value={TAB.MAP_PROPS}>\n            <MapPropertiesView\n              groupToRegions={groupToRegions}\n              tableIndexIndex={tableIndexIndex}\n            />\n          </TabPanel>\n\n          <TabPanel value={TAB.DATA}>\n            <DataTable\n              groupToRegions={groupToRegions}\n              groupTableIndex={groupTableIndex}\n              activeMapColorTableName={activeMapColorTableName}\n            />\n          </TabPanel>\n        </TabContext>\n      </Paper>\n    );\n  }\n}\n","import { WWW } from \"@nuuuwan/utils-js-dev\";\n\nimport Ents, { REGION_TYPES } from \"./Ents.js\";\nimport { APP_NAME } from \"../constants/Constants.js\";\n\nexport const DEFAULT_ZOOM = 8;\nexport const DEFAULT_LATLNG = [7.836173, 80.403442];\n\nexport function getDefaultLatLngZoomStr() {\n  return getLatLngZoomStr(DEFAULT_LATLNG, DEFAULT_ZOOM);\n}\n\nexport function getLatLngZoomStr([lat, lng], zoom) {\n  return `${lat}N,${lng}E,${zoom}z`;\n}\n\nexport function parseLatLngZoomStr(locationStr) {\n  const [latStr, lngStr, zoomStr] = locationStr.split(\",\");\n  const lat = parseFloat(latStr.replace(\"N\", \"\"));\n  const lng = parseFloat(lngStr.replace(\"E\", \"\"));\n  const zoom = parseInt(zoomStr.replace(\"z\", \"\"));\n  return { lat, lng, zoom };\n}\n\nexport function getBrowserLatLng(callback) {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      callback([position.coords.latitude, position.coords.longitude]);\n    });\n  } else {\n    callback(DEFAULT_LATLNG);\n  }\n}\n\nfunction isPointInPolygon(point, polygon) {\n  const [y, x] = point;\n  let nIntersects = 0;\n  for (let i in polygon) {\n    const j = (i - 1 + polygon.length) % polygon.length;\n\n    const [xi, yi] = polygon[i];\n    const [xj, yj] = polygon[j];\n\n    // eslint-disable-next-line no-mixed-operators\n    const a = yi > y !== yj > y;\n    // eslint-disable-next-line no-mixed-operators\n    const b = x < ((xj - xi) * (y - yi)) / (yj - yi) + xi;\n\n    const intersect = a && b;\n    if (intersect) {\n      nIntersects += 1;\n    }\n  }\n  return nIntersects % 2 === 1;\n}\n\nfunction isPointInMultiMultiPolygon(point, multiMultiPolygon) {\n  for (let i in multiMultiPolygon) {\n    const multiPolygon = multiMultiPolygon[i];\n    for (let j in multiPolygon) {\n      const polygon = multiPolygon[j];\n      if (isPointInPolygon(point, polygon)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport default class GeoData {\n  static async getCoordinatesForRegion(regionID) {\n    const regionType = Ents.getEntType(regionID);\n    const url = `/${APP_NAME}/data/geo/${regionType}/${regionID}.json`;\n    return await WWW.json(url);\n  }\n\n  static async getRegionToGeo(regionIDs) {\n    const geoDataList = await Promise.all(\n      regionIDs.map(async function (regionID) {\n        return await GeoData.getCoordinatesForRegion(regionID);\n      })\n    );\n\n    return regionIDs.reduce(function (regionToGeo, regionID, iRegion) {\n      regionToGeo[regionID] = geoDataList[iRegion];\n      return regionToGeo;\n    }, {});\n  }\n\n  static async getRegionTree() {\n    const url = `/${APP_NAME}/data/geo/region_tree.json`;\n    return await WWW.json(url);\n  }\n\n  static async isPointInRegion(point, regionID) {\n    const multiPolygon = await GeoData.getCoordinatesForRegion(regionID);\n    return isPointInMultiMultiPolygon(point, multiPolygon);\n  }\n\n  static async getRegionsForPoint(point) {\n    let regionTree = await GeoData.getRegionTree();\n\n    let regionMap = {};\n\n    for (let iRegionType in REGION_TYPES) {\n      const regionType = REGION_TYPES[iRegionType];\n      const regionIDs = Object.keys(regionTree);\n      let isFoundRegion = false;\n      for (let iRegion in regionIDs) {\n        const regionID = regionIDs[iRegion];\n        const _isPointInRegion = await GeoData.isPointInRegion(point, regionID);\n        if (_isPointInRegion) {\n          regionMap[regionType] = regionID;\n          regionTree = regionTree[regionID];\n          isFoundRegion = true;\n        }\n      }\n      if (!isFoundRegion) {\n        break;\n      }\n    }\n    return regionMap;\n  }\n}\n\nexport function roundLatLng(latLng) {\n  const Q = 1000_000;\n  return latLng.map((x) => Math.round(parseFloat(x) * Q) / Q);\n}\n","import * as topojsonClient from \"topojson-client\";\nimport * as topojsonServer from \"topojson-server\";\nimport * as topojsonSimplify from \"topojson-simplify\";\n\nimport { LRUCache } from \"./BaseUtils.js\";\n\nimport GeoData from \"./GeoData.js\";\n\nconst CACHE_VERSION = \"v5\";\nconst SIMPLIFY_WEIGHT = 0.0000001;\n\nexport const DEFAULT_ZOOM = 8;\nexport const DEFAULT_LATLNG = [7.836173, 80.403442];\n\nexport default class TopoJSONX {\n  static async getGroupGeoJSONNoCache(regionIDs) {\n    const geoJSON = await Promise.all(\n      regionIDs.map(async function (regionID) {\n        return {\n          type: \"MultiPolygon\",\n          coordinates: await GeoData.getCoordinatesForRegion(regionID),\n        };\n      })\n    );\n\n    let topoJSON = topojsonServer.topology(geoJSON);\n    if (SIMPLIFY_WEIGHT) {\n      topoJSON = topojsonSimplify.presimplify(topoJSON);\n      topoJSON = topojsonSimplify.simplify(topoJSON, SIMPLIFY_WEIGHT);\n    }\n\n    const mergedGeoJSON = topojsonClient.merge(\n      topoJSON,\n      Object.values(topoJSON.objects)\n    );\n    return mergedGeoJSON;\n  }\n\n  static async getGroupGeoJSON(regionIDs) {\n    const cacheKey = regionIDs.join(\":\") + CACHE_VERSION;\n    return await LRUCache.get(cacheKey, async function () {\n      return await TopoJSONX.getGroupGeoJSONNoCache(regionIDs);\n    });\n  }\n}\n","import GIG2 from \"./GIG2.js\";\n\nconst BORDER_COLOR = \"white\";\nconst BORDER_WIDTH = 1;\n\nexport default class RegionStyle {\n  static getRegionStyle(groupTableRow) {\n    let opacity = 0.1;\n    let color = \"gray\";\n\n    if (!groupTableRow) {\n      return {\n        fillColor: color,\n        fillOpacity: opacity,\n        color: BORDER_COLOR,\n        weight: BORDER_WIDTH,\n      };\n    }\n\n    const maxValueKey = GIG2.getMaxValueKey(groupTableRow);\n    const maxValueP = GIG2.getValueKeyP(groupTableRow, maxValueKey);\n\n    opacity = maxValueP;\n    color = GIG2.getTableRowColor(groupTableRow);\n\n    return {\n      fillColor: color,\n      fillOpacity: opacity,\n      color: BORDER_COLOR,\n      weight: BORDER_WIDTH,\n    };\n  }\n}\n","import * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Box from \"@mui/material/Box\";\n\nimport { TableCellHeader, TableCellNumber } from \"../../base/TableX.js\";\nimport GIG2 from \"../../base/GIG2.js\";\n\nexport default function DataRowTable(props) {\n  const { groupTableRow } = props;\n  const valueSum = GIG2.getValueSum(groupTableRow);\n\n  let sortedEntries = GIG2.getValueEntriesSortedByValue(groupTableRow);\n  sortedEntries.push([\"TOTAL\", valueSum]);\n\n  return (\n    <Box sx={{ width: 200 }}>\n      <TableContainer>\n        <Table stickyHeader padding=\"none\">\n          <TableBody>\n            {sortedEntries.map(function ([valueKey, value], iKey) {\n              if (value === 0) {\n                return null;\n              }\n              return (\n                <TableRow key={valueKey}>\n                  <TableCellHeader valueKey={valueKey} />\n                  <TableCellNumber\n                    value={value}\n                    valueSum={valueSum}\n                    valueKey={valueKey}\n                  />\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n}\n","import { Component } from \"react\";\nimport { GeoJSON, Circle } from \"react-leaflet\";\n\nexport default class RegionView extends Component {\n  render() {\n    const {\n      geoJSON,\n      style,\n      center,\n      radius,\n      renderedPopup,\n      showDorlingCartogram,\n    } = this.props;\n    const onEachFeature = (feature, layer) => {\n      layer.on({\n        click: function (e) {\n          console.debug(\"Not implemented\");\n        },\n      });\n    };\n\n    const renderedCartogram = showDorlingCartogram ? (\n      <Circle center={center} radius={radius} pathOptions={style}>\n        {renderedPopup}\n      </Circle>\n    ) : null;\n\n    const mapStyle = showDorlingCartogram\n      ? {\n          fillColor: style.fillColor,\n          fillOpacity: style.fillOpacity / 5,\n          color: \"rgba(0,0,0,0.2)\",\n          weight: style.weight,\n        }\n      : style;\n\n    return (\n      <>\n        <GeoJSON data={geoJSON} style={mapStyle} onEachFeature={onEachFeature}>\n          {renderedPopup}\n        </GeoJSON>\n        {renderedCartogram}\n      </>\n    );\n  }\n}\n","import { Component } from \"react\";\n\nimport * as d3 from \"d3\";\n\nimport { Popup } from \"react-leaflet\";\nimport Box from \"@mui/material/Box\";\n\nimport TopoJSONX from \"../../base/TopoJSONX.js\";\nimport GIG2 from \"../../base/GIG2.js\";\nimport RegionStyle from \"../../base/RegionStyle.js\";\n\nimport DataRowTable from \"../../nonstate/molecules/DataRowTable.js\";\nimport RegionView from \"../atoms/RegionView.js\";\nimport RegionLabel from \"../atoms/RegionLabel.js\";\n\nconst SIMULATION_ITERATIONS = 80;\n\nfunction getRadiusFromPop(pop) {\n  return Math.sqrt(pop) * 20;\n}\nconst RADIUS_TO_GEO_UNITS = 0.00001015;\n\nexport default class MultiRegionView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { groupGeoJSONList: null };\n    this.isComponentMounted = false;\n  }\n\n  async componentDidMount() {\n    this.isComponentMounted = true;\n    const { groupToRegions } = this.props;\n\n    const groupGeoJSONList = await Promise.all(\n      Object.entries(groupToRegions).map(async function ([groupID, regionIDs]) {\n        return await TopoJSONX.getGroupGeoJSON(regionIDs);\n      })\n    );\n\n    if (this.isComponentMounted) {\n      this.setState({ groupGeoJSONList });\n    }\n  }\n\n  render() {\n    const { groupGeoJSONList } = this.state;\n\n    if (!groupGeoJSONList) {\n      return null;\n    }\n\n    const { groupToRegions, groupTableIndex, showDorlingCartogram } =\n      this.props;\n\n    const groupIDs = Object.keys(groupToRegions);\n    let groupGeoJSONListSim = groupGeoJSONList.map(function (d) {\n      const centroid = d3.geoCentroid(d);\n      [d.y, d.x] = centroid;\n      return d;\n    });\n    const groupPopList = groupIDs.map(function (groupID) {\n      return GIG2.getValueSum(groupTableIndex[groupID]);\n    });\n\n    let nodes;\n    if (showDorlingCartogram) {\n      const simulation = d3\n        .forceSimulation(groupGeoJSONListSim)\n        .force(\n          \"x\",\n          d3.forceX((d) => d3.geoCentroid(d)[1])\n        )\n        .force(\n          \"y\",\n          d3.forceY((d) => d3.geoCentroid(d)[0])\n        )\n        .force(\n          \"collide\",\n          d3.forceCollide(\n            (d, i) => RADIUS_TO_GEO_UNITS * getRadiusFromPop(groupPopList[i])\n          )\n        )\n        .stop();\n      for (let i = 0; i < SIMULATION_ITERATIONS; i++) {\n        simulation.tick();\n      }\n      nodes = simulation.nodes();\n    }\n\n    return Object.entries(groupToRegions).map(function (\n      [groupID, regionIDs],\n      iGroup\n    ) {\n      const groupTableRow = groupTableIndex[groupID];\n      const pop = GIG2.getValueSum(groupTableRow);\n      const radius = getRadiusFromPop(pop);\n\n      let center;\n      if (showDorlingCartogram) {\n        center = [nodes[iGroup].x, nodes[iGroup].y];\n      }\n\n      const renderedPopup = (\n        <Popup>\n          <Box style={{ fontSize: 24 }}>\n            <RegionLabel regionID={groupID} />\n          </Box>\n          <DataRowTable groupTableRow={groupTableRow} />\n        </Popup>\n      );\n\n      const style = RegionStyle.getRegionStyle(groupTableRow);\n\n      return (\n        <RegionView\n          key={`group-${regionIDs[0]}`}\n          geoJSON={groupGeoJSONList[iGroup]}\n          style={style}\n          renderedPopup={renderedPopup}\n          showDorlingCartogram={showDorlingCartogram}\n          radius={radius}\n          center={center}\n        />\n      );\n    });\n  }\n}\n","import Paper from \"@mui/material/Paper\";\n\nimport ListSubheader from \"@mui/material/ListSubheader\";\nimport List from \"@mui/material/List\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\n\nimport MapIcon from \"@mui/icons-material/Map\";\n\nimport Ents from \"../../base/Ents.js\";\n\nexport default function MapPanel(props) {\n  const { activeMapID, onClickMap, mapInfoIndex } = props;\n\n  function renderListItem(mapID) {\n    const selected = activeMapID === mapID;\n\n    function onClick() {\n      onClickMap(mapID);\n    }\n\n    return (\n      <ListItemButton key={mapID} selected={selected} onClick={onClick}>\n        <ListItemIcon>\n          <MapIcon />\n        </ListItemIcon>\n        <ListItemText primary={Ents.getEntTypeLongName(mapID)} />\n      </ListItemButton>\n    );\n  }\n\n  return (\n    <Paper\n      sx={{\n        position: \"absolute\",\n        zIndex: 1000,\n\n        left: 20,\n        top: 20,\n        width: 200,\n        height: 300,\n      }}\n    >\n      <List dense subheader={<ListSubheader>Split Regions by</ListSubheader>}>\n        {Object.keys(mapInfoIndex).map(renderListItem)}\n      </List>\n    </Paper>\n  );\n}\n","import Paper from \"@mui/material/Paper\";\n\nimport ListSubheader from \"@mui/material/ListSubheader\";\nimport List from \"@mui/material/List\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Switch from \"@mui/material/Switch\";\n\nimport { COLOR_INFO_LIST } from \"../../constants/GIG2Constants.js\";\n\nexport default function ColorPanel(props) {\n  const {\n    activeMapColorTableName,\n    onClickMapColor,\n    showDorlingCartogram,\n    onClickShowDorlingCartogram,\n    onClickHideDorlingCartogram,\n  } = props;\n\n  function renderListItem({ label, tableName, Icon }) {\n    const selected = activeMapColorTableName === tableName;\n\n    function onClick() {\n      onClickMapColor(tableName);\n    }\n\n    return (\n      <ListItemButton key={label} selected={selected} onClick={onClick}>\n        <ListItemIcon>\n          <Icon />\n        </ListItemIcon>\n        <ListItemText primary={label} />\n      </ListItemButton>\n    );\n  }\n\n  function onChangeDorlingCartogram(e) {\n    if (e.target.checked) {\n      onClickShowDorlingCartogram();\n    } else {\n      onClickHideDorlingCartogram();\n    }\n  }\n\n  return (\n    <Paper\n      sx={{\n        position: \"absolute\",\n        zIndex: 1000,\n\n        left: 20,\n        bottom: 20,\n\n        width: 300,\n        height: 420,\n        overflow: \"scroll\",\n      }}\n    >\n      <FormGroup sx={{ marginLeft: 2 }}>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={showDorlingCartogram}\n              onChange={onChangeDorlingCartogram}\n            />\n          }\n          label=\"Dorling Cartogram\"\n        />\n      </FormGroup>\n      <List dense subheader={<ListSubheader>Color Map by</ListSubheader>}>\n        {COLOR_INFO_LIST.map(renderListItem)}\n      </List>\n    </Paper>\n  );\n}\n","import { Component } from \"react\";\n\nimport GIG2 from \"../../base/GIG2.js\";\nimport { DEFAULT_TABLE_NAME } from \"../../constants/GIG2Constants.js\";\nimport { ENT } from \"../../base/Ents.js\";\nimport RegionGroup from \"../../base/RegionGroup.js\";\nimport GeoMap from \"../molecules/GeoMap.js\";\nimport MainPanel from \"../molecules/MainPanel.js\";\nimport MultiRegionView from \"../../stateful/molecules/MultiRegionView.js\";\nimport MapPanel from \"../../nonstate/molecules/MapPanel.js\";\nimport ColorPanel from \"../../nonstate/molecules/ColorPanel.js\";\n\nconst DEFAULT_ZOOM = 8;\nconst DEFAULT_LATLNG = [7.9, 81.5];\nconst DEFAULT_MAP_ID = ENT.PROVINCE;\n\nexport default class HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Data\n      activeMapID: DEFAULT_MAP_ID,\n      mapInfoIndex: undefined,\n\n      groupIndex: undefined,\n      activeGroupID: undefined,\n\n      tableIndexIndex: undefined,\n      activeMapColorTableName: DEFAULT_TABLE_NAME,\n\n      showDorlingCartogram: false,\n    };\n  }\n\n  async componentDidMount() {\n    const { activeMapID, activeMapColorTableName } = this.state;\n    await this.updateMap(activeMapID, activeMapColorTableName);\n  }\n\n  async updateMap(activeMapID, activeMapColorTableName) {\n    let mapInfoIndex = this.state.mapInfoIndex;\n    if (!mapInfoIndex) {\n      mapInfoIndex = await RegionGroup.getMapInfoIndex();\n    }\n\n    let tableIndexIndex = this.state.tableIndexIndex;\n    if (!tableIndexIndex) {\n      tableIndexIndex = await GIG2.getTableIndexIndex();\n    }\n\n    const { groupIndex, groupToRegions } = mapInfoIndex[activeMapID];\n    const activeGroupID = Object.keys(groupIndex)[0];\n    const activeTableIndex = tableIndexIndex[activeMapColorTableName];\n    const groupTableIndex = RegionGroup.getGroupTableIndex(\n      groupToRegions,\n      activeTableIndex\n    );\n\n    this.setState({\n      activeMapID,\n      activeMapColorTableName,\n\n      mapInfoIndex,\n      groupIndex,\n      groupToRegions,\n      activeGroupID,\n      tableIndexIndex,\n      activeTableIndex,\n      groupTableIndex,\n    });\n  }\n\n  async onClickMapColor(activeMapColorTableName) {\n    await this.updateMap(this.state.activeMapID, activeMapColorTableName);\n  }\n  async onClickMap(activeMapID) {\n    await this.updateMap(activeMapID, this.state.activeMapColorTableName);\n  }\n\n  onClickShowDorlingCartogram() {\n    this.setState({ showDorlingCartogram: true });\n  }\n  onClickHideDorlingCartogram() {\n    this.setState({ showDorlingCartogram: false });\n  }\n\n  render() {\n    const { groupIndex } = this.state;\n\n    if (!groupIndex) {\n      return \"Loading...\";\n    }\n\n    const {\n      groupToRegions,\n      activeGroupID,\n      mapInfoIndex,\n      tableIndexIndex,\n      activeMapColorTableName,\n      activeMapID,\n      activeTableIndex,\n      groupTableIndex,\n      showDorlingCartogram,\n    } = this.state;\n\n    return (\n      <div>\n        <GeoMap center={DEFAULT_LATLNG} zoom={DEFAULT_ZOOM}>\n          <MultiRegionView\n            key={`multi-region-view-${activeMapID}-${showDorlingCartogram}`}\n            groupToRegions={groupToRegions}\n            activeGroupID={activeGroupID}\n            groupTableIndex={groupTableIndex}\n            showDorlingCartogram={showDorlingCartogram}\n          />\n        </GeoMap>\n        <MapPanel\n          activeMapID={activeMapID}\n          onClickMap={this.onClickMap.bind(this)}\n          mapInfoIndex={mapInfoIndex}\n        />\n        <ColorPanel\n          activeMapColorTableName={activeMapColorTableName}\n          onClickMapColor={this.onClickMapColor.bind(this)}\n          showDorlingCartogram={showDorlingCartogram}\n          onClickShowDorlingCartogram={this.onClickShowDorlingCartogram.bind(\n            this\n          )}\n          onClickHideDorlingCartogram={this.onClickHideDorlingCartogram.bind(\n            this\n          )}\n        />\n\n        <MainPanel\n          groupIndex={groupIndex}\n          groupToRegions={groupToRegions}\n          activeGroupID={activeGroupID}\n          activeTableIndex={activeTableIndex}\n          activeMapColorTableName={activeMapColorTableName}\n          tableIndexIndex={tableIndexIndex}\n          groupTableIndex={groupTableIndex}\n        />\n      </div>\n    );\n  }\n}\n","import \"./App.css\";\n\nimport HomePage from \"./stateful/pages/HomePage.js\";\n\nfunction App() {\n  return <HomePage />;\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}