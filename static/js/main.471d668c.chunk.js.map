{"version":3,"sources":["base/BaseUtils.js","constants/ColorConstants.js","constants/Constants.js","base/GIG2.js","base/Ents.js","base/RegionGroup.js","stateful/molecules/GeoMap.js","nonstate/molecules/DataTable.js","nonstate/molecules/MapPropertiesView.js","stateful/molecules/MainPanel.js","base/GeoData.js","stateful/atoms/RegionView.js","stateful/molecules/MultiRegionView.js","nonstate/molecules/ColorPanel.js","nonstate/molecules/MapPanel.js","stateful/pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["LRU_CACHE","require","DataStructures","keyIDs","asyncFuncKeyToData","Promise","all","map","keyID","a","dataList","reduce","index","iKey","keyToValue","Object","entries","valueToKeys","key","value","push","Humanize","x","toPrecision","xSum","p","StatX","xList","n","length","MathX","sum","mean","Math","sqrt","variance","LRUCache","cacheKey","asyncFallback","hotItemInLRUCache","get","JSON","parse","hotItemInLocalStorage","localStorage","getItem","set","coldItemRaw","coldItem","stringify","setItem","QuotaExceededError","clear","COLOR_SL_FLAG","FIELD_NAME_TO_COLOR","SLFP","PA","UPFA","SLPP","UNP","NDF","SJB","JVP","JJB","LSSP","ACTC","ITAK","AITC","TMVP","MNA","SLMC","EPDP","TULF","SLMP","other","others","bharatha","burgher","chetty","indian_tamil","tamil","malay","moor","muslim","sinhalese","sri_lankan_tamil","buddhist","islam","hindu","roman_catholic","other_christian","christian","female","male","son_or_daughter","head","wife_or_husband","grandchild_or_great_grand_child","other_relative","non_relative","son_or_daughter_in_law","parent_of_head_or_spouse","boarder","domestic_employee","clergy","tv","mobile","radio","fixed_tp","pc","laptop","fax","fire_wood","gas","kerosene","electricity","asbestos","tile","metal_sheet","concrete","zink_aluminium_sheet","cement","tile_or_granite_or_terrazo","mud","wood","occupants_burn","occupants_bury","collected_by_local_authorities","occupants_composting_solid_waste","tap_within_unit_main_line","tap_within_premises_but_outside_unit_main_line","tap_outside_premises_main_line","protected_well_within_premises","protected_well_outside_premises","unprotected_well","tube_well","rural_water_projects","river_or_tank_or_stream","bottled_water","single_house_single_floor","single_house_double_floor","single_house_more_than_2_floors","row_house_or_line_room","attached_house_or_annex","twin_house","flat","condominium","hut_or_shanty","owned_by_a_household_member","rent_or_lease_privately_owned","rent_or_lease_government_owned","occupied_free_of_rent","encroached","water_seal_and_connected_to_a_piped_sewer_system","water_seal_and_connected_to_a_septic_tank","pour_flush_toilet_not_water_seal","direct_pit","not_using_a_toilet","electricity_national_electricity_network","solar_power","bio_gas","housing_unit","collective_living_quarter","non_housing_unit","semi_permanent","permanent","improvised","unclassified","married_registered","never_married","widowed","married_customary","separated_not_legally","divorced","legally_separated","cement_block_or_stone","brick","cabook","soil_bricks","plank_or_metal_sheet","cadjan_or_palmyrah","occupied","vacant","APP_NAME","adhocValueKeyToColor","KEY_OTHER","MERGE_ALIAS_MAP","GIG2","tableName","url","WWW","tsv","getTable","table","valueKeys","getValueKeys","tableIndex","tableRow","cleanTableRow","includes","parseFloat","isNaN","keys","filter","cellKey","maxValueKey","valueKey","minValueP","maxValueP","sumValue","getSumValues","valueP","min","max","sumValues","Color","getRandomHSLA","getMaxValueKey","getValueKeyColor","sortedValuePs","getValueKeyP","sort","nValues","valuePToRankP","iValue","values","firstRow","getFirstRow","totalRow","sortedNonOtherKeys","otherValueKeys","expandedTableRow","nonOtherKey","otherValueSum","mergedTableRow","mergedKey","mergedTableIndex","regionID","mergeKeysOnTableRow","mergeKeysOnTable","getTotalRow","valueSum","getValueSum","nonOtherValueKeysGlobal","nonOtherValueKeysLocalSet","tableRowValueSum","otherValueKeysLocal","add","Set","nonOtherValueKeys","Array","from","has","b","expandedTableIndex","expandOtherOnTableRow","ENT","COUNTRY","PROVINCE","DISTRICT","DSD","GND","PD","ED","MOH","LG","UNKNOWN","REGION_TYPES","ENT_TYPE_TO_LONG_NAME","Country","PARENT_TO_CHILD","undefined","Ents","entID","substring","regionType","entType","getEntsByType","ents","entIndex","ent","id","entTypes","getEntIndexByType","entIndexList","allEntIndex","iEnt","getEntType","json","parentType","parentID","childRegionType","StringX","toTitleCase","RegionGroup","mapName","rawInfo","groupToRegions","groupIndex","groupID","name","mapID","regionEnts","groupList","regionEnt","group","regionIDs","getEntTypeLongName","buildIndex","getMapInfoForRegionType","forRegionTypes","getMapInfoForCustomMap","forCustomMaps","assign","activeTableIndex","rawGroupTableIndex","groupTableIndex","groupRow","mergeAndExpandOtherOnTable","GeoMap","this","props","center","zoom","MapContainer","TileLayer","ZoomControl","position","children","Component","renderHeaderCell","TableCell","align","width","style","fontWeight","TableCellNumber","isMax","humanizedValue","number","humanizedPercent","percent","backgroundColor","color","opacity","styleText","borderRadius","padding","fontSize","DataTable","activeMapColorTableName","title","split","Box","Typography","variant","component","TableContainer","sx","top","bottom","Table","stickyHeader","TableHead","TableRow","TableBody","iRow","dataRow","GroupInfoView","region","pop","PCorrectStats","popList","pCorrect","meanPop","limitLower","limitUpper","nCorrectSizeRegions","nRegions","display","MapPropertiesView","popTableIndex","tableIndexIndex","groupInfoList","parseInt","regionMin","regionMax","groupInfo","stdevPop","stdev","Paper","TAB","MAP_PROPS","DATA","DEFAULT_TAB","MainPanel","state","activeTab","event","newActiveTab","setState","right","zIndex","TabContext","borderBottom","borderColor","TabList","onChange","onTabChange","bind","tab","Tab","label","TabPanel","isPointInPolygon","point","polygon","y","nIntersects","i","j","xi","yi","xj","yj","isPointInMultiMultiPolygon","multiMultiPolygon","multiPolygon","GeoData","getCoordinatesForRegion","geoDataList","regionToGeo","iRegion","getRegionTree","regionTree","regionMap","iRegionType","isFoundRegion","isPointInRegion","RegionView","geoJSON","radius","renderedCartogram","Circle","pathOptions","mapStyle","fillColor","fillOpacity","weight","GeoJSON","data","onEachFeature","feature","layer","on","click","e","console","debug","SIMPLIFY_WEIGHT","getRadiusFromPop","getGroupGeoJSONNoCache","type","coordinates","topoJSON","topojsonServer","topojsonSimplify","mergedGeoJSON","topojsonClient","objects","getGroupGeoJSON","join","MultiRegionView","groupGeoJSONList","isComponentMounted","funcGetRegionStyle","funcGetRegionPop","groupIDs","simulation","d3","force","d","stop","tick","nodes","iGroup","COLOR_INFO_LIST","concat","electionYear","Icon","BallotIcon","PeopleAltIcon","localeCompare","ColorPanel","onClickMapColor","left","height","overflow","List","dense","subheader","ListSubheader","selected","ListItemButton","onClick","ListItemIcon","ListItemText","primary","MapPanel","activeMapID","onClickMap","mapInfoIndex","DEFAULT_LATLNG","DEFAULT_MAP_ID","TABLE_NAMES","DEFAULT_TABLE_NAME","BORDER_COLOR","getTableIndexIndex","getTableIndex","HomePage","activeGroupID","updateMap","getMapInfoIndex","getGroupTableIndex","regionRow","getTableRowColor","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.471d668c.chunk.js","sourcesContent":["import { MathX } from \"@nuuuwan/utils-js-dev\";\nconst LRU = require(\"lru-cache\");\nconst LRU_CACHE = new LRU();\n\nexport class DataStructures {\n  static async buildIndex(keyIDs, asyncFuncKeyToData) {\n    const dataList = await Promise.all(\n      keyIDs.map(async function (keyID) {\n        return await asyncFuncKeyToData(keyID);\n      })\n    );\n\n    return keyIDs.reduce(function (index, keyID, iKey) {\n      index[keyID] = dataList[iKey];\n      return index;\n    }, {});\n  }\n\n  static invertDict(keyToValue) {\n    return Object.entries(keyToValue).reduce(function (\n      valueToKeys,\n      [key, value]\n    ) {\n      if (value) {\n        if (!valueToKeys[value]) {\n          valueToKeys[value] = [];\n        }\n        valueToKeys[value].push(key);\n      }\n      return valueToKeys;\n    },\n    {});\n  }\n}\n\nconst DEFAULT_PRECISION = 3;\n\nexport class Humanize {\n  static number(x) {\n    if (!x) {\n      return \"-\";\n    }\n\n    if (x > 1_000_000) {\n      return (x / 1_000_000).toPrecision(DEFAULT_PRECISION) + \"M\";\n    }\n    if (x > 1_000) {\n      return (x / 1_000).toPrecision(DEFAULT_PRECISION) + \"K\";\n    }\n    return x;\n  }\n\n  static percent(x, xSum) {\n    if (!xSum || !x) {\n      return \"-\";\n    }\n    const p = x / xSum;\n    if (p < 0.01) {\n      return \"<1%\";\n    }\n    return (p * 100.0).toPrecision(DEFAULT_PRECISION) + \"%\";\n  }\n}\n\nexport class StatX {\n  static mean(xList) {\n    const n = xList.length;\n    return MathX.sum(xList) / n;\n  }\n\n  static variance(xList) {\n    const n = xList.length;\n    const eX2 = MathX.sum(xList.map((x) => x * x)) / n;\n    const mean = StatX.mean(xList);\n    return eX2 - mean;\n  }\n\n  static stdev(xList) {\n    return Math.sqrt(StatX.variance(xList));\n  }\n}\n\nexport class LRUCache {\n  static async get(cacheKey, asyncFallback) {\n    const hotItemInLRUCache = LRU_CACHE.get(cacheKey);\n    if (hotItemInLRUCache) {\n      return JSON.parse(hotItemInLRUCache);\n    }\n\n    const hotItemInLocalStorage = localStorage.getItem(cacheKey);\n    if (hotItemInLocalStorage) {\n      LRU_CACHE.set(cacheKey, hotItemInLocalStorage);\n      return JSON.parse(hotItemInLocalStorage);\n    }\n\n    const coldItemRaw = await asyncFallback();\n    const coldItem = JSON.stringify(coldItemRaw);\n    LRU_CACHE.set(cacheKey, coldItem);\n\n    try {\n      localStorage.setItem(cacheKey, coldItem);\n    } catch (QuotaExceededError) {\n      localStorage.clear();\n    }\n    return coldItemRaw;\n  }\n}\n","export const COLOR_ACTIVE = \"red\";\nexport const COLOR_NOT_ACTIVE = \"white\";\n\nexport const COLOR_SL_FLAG = {\n  SINHALA: \"hsl(355, 63%, 34%)\",\n  TAMIL: \"hsl(21, 100%, 50%)\",\n  MOOR: \"hsl(165, 100%, 17%)\",\n  BUDDHIST: \"hsl(43, 100%, 50%)\",\n};\nexport const FIELD_NAME_TO_COLOR = {\n  // political parties\n  SLFP: \"blue\",\n  PA: \"blue\",\n  UPFA: \"blue\",\n  SLPP: COLOR_SL_FLAG.SINHALA,\n  UNP: \"green\",\n  NDF: \"green\",\n  SJB: \"green\",\n  JVP: \"red\",\n  JJB: \"red\",\n  LSSP: \"red\",\n  ACTC: COLOR_SL_FLAG.TAMIL,\n  ITAK: COLOR_SL_FLAG.TAMIL,\n  AITC: \"yellow\",\n  TMVP: \"red\",\n  MNA: \"darkgreen\",\n  SLMC: \"darkgreen\",\n  EPDP: \"red\",\n  TULF: \"red\",\n  SLMP: \"purple\",\n\n  other: \"gray\",\n  others: \"gray\",\n  // ethnicity_of_population\n  bharatha: \"cyan\",\n  burgher: \"purple\",\n  chetty: \"blue\",\n  indian_tamil: COLOR_SL_FLAG.TAMIL,\n  tamil: COLOR_SL_FLAG.TAMIL,\n  malay: COLOR_SL_FLAG.MOOR,\n  moor: COLOR_SL_FLAG.MOOR,\n  muslim: COLOR_SL_FLAG.MOOR,\n  sinhalese: COLOR_SL_FLAG.SINHALA,\n  sri_lankan_tamil: COLOR_SL_FLAG.TAMIL,\n  // religious_affiliation_of_population\n  buddhist: COLOR_SL_FLAG.BUDDHIST,\n  islam: COLOR_SL_FLAG.MOOR,\n  hindu: COLOR_SL_FLAG.TAMIL,\n  roman_catholic: \"purple\",\n  other_christian: \"blue\",\n  christian: \"purple\",\n  // gender_of_population\n  female: \"pink\",\n  male: \"lightblue\",\n  // age_group_of_population\n  // relationship_to_household_head_of_population\n  son_or_daughter: \"green\",\n  head: \"blue\",\n  wife_or_husband: \"pink\",\n  grandchild_or_great_grand_child: \"darkgreen\",\n  other_relative: \"yellow\",\n  non_relative: \"silver\",\n  son_or_daughter_in_law: \"lightgreen\",\n  parent_of_head_or_spouse: \"red\",\n  boarder: \"gray\",\n  domestic_employee: \"brown\",\n  clergy: \"yellow\", //\n  // communication_items_owned_by_household\n  tv: \"green\",\n  mobile: \"purple\",\n  radio: \"maroon\",\n  fixed_tp: \"blue\",\n  pc: \"red\",\n  laptop: \"pink\",\n  fax: \"silver\",\n  // cooking_fuel_of_household\n  fire_wood: \"brown\",\n  gas: \"orange\",\n  kerosene: \"purple\",\n  electricity: \"blue\",\n  // roof_type_in_housing_unit\n\n  // rooms_in_housing_unit\n  // floor_type_in_housing_unit\n  asbestos: \"gray\",\n  tile: \"darkred\",\n  metal_sheet: \"silver\",\n  concrete: \"green\",\n  zink_aluminium_sheet: \"blue\",\n  cement: \"lightgray\",\n  tile_or_granite_or_terrazo: \"orange\",\n  mud: \"darkbrown\",\n  wood: \"brown\",\n  // solid_waste_disposal_by_household\n  occupants_burn: \"red\",\n  occupants_bury: \"orange\",\n  collected_by_local_authorities: \"blue\",\n  occupants_composting_solid_waste: \"green\",\n  // source_of_drinking_water_of_household\n  tap_within_unit_main_line: \"darkgreen\",\n  tap_within_premises_but_outside_unit_main_line: \"green\",\n  tap_outside_premises_main_line: \"orange\",\n  protected_well_within_premises: \"blue\",\n  protected_well_outside_premises: \"lightblue\",\n  unprotected_well: \"purple\",\n  tube_well: \"cyan\",\n  rural_water_projects: \"pink\",\n  river_or_tank_or_stream: \"red\", //\n  bottled_water: \"silver\",\n  // structure_of_housing_units\n  single_house_single_floor: \"darkgreen\",\n  single_house_double_floor: \"green\",\n  single_house_more_than_2_floors: \"lightgreen\",\n  row_house_or_line_room: \"orange\",\n  attached_house_or_annex: \"silver\",\n  twin_house: \"cyan\",\n  flat: \"blue\",\n  condominium: \"purple\",\n  hut_or_shanty: \"red\",\n\n  // housing_ownership_status_of_household\n  owned_by_a_household_member: \"green\",\n  rent_or_lease_privately_owned: \"blue\",\n  rent_or_lease_government_owned: \"cyan\",\n  occupied_free_of_rent: \"orange\",\n  encroached: \"red\",\n  // toilet_facilities_of_household\n  water_seal_and_connected_to_a_piped_sewer_system: \"green\",\n  water_seal_and_connected_to_a_septic_tank: \"lightgreen\",\n  pour_flush_toilet_not_water_seal: \"orange\",\n  direct_pit: \"red\",\n  not_using_a_toilet: \"black\",\n  // lighting_of_household\n  electricity_national_electricity_network: \"blue\",\n  solar_power: \"yellow\",\n  bio_gas: \"orange\",\n  // living_quarters\n  housing_unit: \"green\",\n  collective_living_quarter: \"orange\",\n  non_housing_unit: \"red\",\n  // type_of_housing_unit\n  semi_permanent: \"orange\",\n  permanent: \"green\",\n  improvised: \"red\",\n  unclassified: \"black\",\n  // marital_status_of_population\n  married_registered: \"blue\",\n  never_married: \"green\",\n  widowed: \"orange\",\n  married_customary: \"lightblue\",\n  separated_not_legally: \"pink\",\n  divorced: \"red\",\n  legally_separated: \"maroon\",\n  // wall_type_in_housing_units\n  cement_block_or_stone: \"darkgray\",\n  brick: \"maroon\",\n  cabook: \"orange\",\n  soil_bricks: \"green\",\n  plank_or_metal_sheet: \"silver\",\n  // occupation_status_of_housing_units\n  cadjan_or_palmyrah: \"orange\",\n  occupied: \"green\",\n  vacant: \"red\",\n  // year_of_construction_of_housing_unit\n  // persons_living_in_housing_unit\n};\n","export const APP_NAME = \"lk_regions\";\n","import { MathX, Color, WWW } from \"@nuuuwan/utils-js-dev\";\nimport { FIELD_NAME_TO_COLOR } from \"../constants/ColorConstants.js\";\nimport { APP_NAME } from \"../constants/Constants.js\";\nlet adhocValueKeyToColor = {};\n\nconst ID_FIELD_KEY = \"entity_id\";\nconst OTHER_LIMIT_GLOBAL = 0.01;\nconst OTHER_LIMIT_LOCAL = 0.2;\nconst KEY_OTHER = \"other\";\nconst MERGE_ALIAS_MAP = {\n  moor: \"muslim\",\n  malay: \"muslim\",\n  sri_lankan_tamil: \"tamil\",\n  indian_tamil: \"tamil\",\n  roman_catholic: \"christian\",\n  other_christian: \"christian\",\n};\n\nexport default class GIG2 {\n  static async getTable(tableName) {\n    const url = `/${APP_NAME}/data/gig2/${tableName}.tsv`;\n    return await WWW.tsv(url);\n  }\n\n  static async getTableIndex(tableName) {\n    const table = await GIG2.getTable(tableName);\n    const valueKeys = GIG2.getValueKeys(table[0]);\n    return table.reduce(function (tableIndex, tableRow) {\n      tableIndex[tableRow[ID_FIELD_KEY]] = Object.entries(tableRow).reduce(\n        function (cleanTableRow, [key, value]) {\n          if (valueKeys.includes(key)) {\n            value = parseFloat(value);\n            if (isNaN(value)) {\n              value = 0;\n            }\n          }\n          cleanTableRow[key] = value;\n          return cleanTableRow;\n        },\n        {}\n      );\n      return tableIndex;\n    }, {});\n  }\n\n  static getValueKeys(tableRow) {\n    const valueCellKeys = Object.keys(tableRow).filter(\n      (cellKey) =>\n        !(\n          cellKey.includes(\"total_\") ||\n          cellKey.includes(\"_id\") ||\n          cellKey.includes(\"result_ut\") ||\n          cellKey.includes(\"valid\") ||\n          cellKey.includes(\"rejected\") ||\n          cellKey.includes(\"polled\") ||\n          cellKey.includes(\"electors\")\n        )\n    );\n    return valueCellKeys;\n  }\n\n  static getMaxValueKey(tableRow) {\n    const valueKeys = GIG2.getValueKeys(tableRow);\n    const maxValueKey = valueKeys.reduce(function (maxValueKey, valueKey) {\n      if (valueKey !== KEY_OTHER) {\n        if (tableRow[maxValueKey] < tableRow[valueKey]) {\n          maxValueKey = valueKey;\n        }\n      }\n      return maxValueKey;\n    }, valueKeys[0]);\n    return maxValueKey;\n  }\n\n  static getMinMaxValueP(dataList, valueKey) {\n    return dataList.reduce(\n      function ([minValueP, maxValueP], tableRow) {\n        const sumValue = GIG2.getSumValues(tableRow);\n        const value = tableRow[valueKey];\n        const valueP = value / sumValue;\n        return [Math.min(minValueP, valueP), Math.max(maxValueP, valueP)];\n      },\n      [1.0, 0.0]\n    );\n  }\n\n  static getSumValues(tableRow) {\n    const valueKeys = GIG2.getValueKeys(tableRow);\n    return MathX.sum(valueKeys.map((valueKey) => tableRow[valueKey]));\n  }\n\n  static getValueKeyP(tableRow, valueKey) {\n    const sumValues = GIG2.getSumValues(tableRow);\n    return tableRow[valueKey] / sumValues;\n  }\n\n  static getValueKeyColor(valueKey) {\n    if (FIELD_NAME_TO_COLOR[valueKey]) {\n      return FIELD_NAME_TO_COLOR[valueKey];\n    }\n    if (!adhocValueKeyToColor[valueKey]) {\n      adhocValueKeyToColor[valueKey] = Color.getRandomHSLA();\n    }\n    return adhocValueKeyToColor[valueKey];\n  }\n\n  static getTableRowColor(tableRow) {\n    const maxValueKey = GIG2.getMaxValueKey(tableRow);\n    return GIG2.getValueKeyColor(maxValueKey);\n  }\n\n  static getValuePToRankP(dataList, valueKey) {\n    const sortedValuePs = dataList\n      .map((tableRow) => GIG2.getValueKeyP(tableRow, valueKey))\n      .sort();\n    const nValues = sortedValuePs.length;\n    return sortedValuePs.reduce(function (valuePToRankP, valueP, iValue) {\n      valuePToRankP[valueP] = iValue / nValues;\n      return valuePToRankP;\n    }, {});\n  }\n\n  static getFirstRow(tableIndex) {\n    return Object.values(tableIndex)[0];\n  }\n\n  static getTotalRow(tableIndex) {\n    const firstRow = GIG2.getFirstRow(tableIndex);\n    const valueKeys = GIG2.getValueKeys(firstRow);\n    return valueKeys.reduce(function (totalRow, key) {\n      totalRow[key] = MathX.sum(\n        Object.values(tableIndex).map((tableRow) => tableRow[key])\n      );\n      return totalRow;\n    }, {});\n  }\n\n  static getValueSum(tableRow) {\n    const valueKeys = GIG2.getValueKeys(tableRow);\n    return MathX.sum(valueKeys.map((valueKey) => tableRow[valueKey]));\n  }\n\n  static expandOtherOnTableRow(tableRow, sortedNonOtherKeys, otherValueKeys) {\n    let expandedTableRow = sortedNonOtherKeys.reduce(function (\n      expandedTableRow,\n      nonOtherKey\n    ) {\n      expandedTableRow[nonOtherKey] = tableRow[nonOtherKey];\n      return expandedTableRow;\n    },\n    {});\n\n    const otherValueSum = MathX.sum(\n      otherValueKeys.map((valueKey) => tableRow[valueKey])\n    );\n    expandedTableRow[KEY_OTHER] = otherValueSum;\n\n    return expandedTableRow;\n  }\n\n  static mergeKeysOnTableRow(tableRow) {\n    return Object.entries(tableRow).reduce(function (\n      mergedTableRow,\n      [key, value]\n    ) {\n      const mergedKey = MERGE_ALIAS_MAP[key] ? MERGE_ALIAS_MAP[key] : key;\n      if (!mergedTableRow[mergedKey]) {\n        mergedTableRow[mergedKey] = 0;\n      }\n      mergedTableRow[mergedKey] += value;\n      return mergedTableRow;\n    },\n    {});\n  }\n\n  static mergeKeysOnTable(tableIndex) {\n    return Object.entries(tableIndex).reduce(function (\n      mergedTableIndex,\n      [regionID, tableRow]\n    ) {\n      mergedTableIndex[regionID] = GIG2.mergeKeysOnTableRow(tableRow);\n      return mergedTableIndex;\n    },\n    {});\n  }\n\n  static mergeAndExpandOtherOnTable(tableIndex) {\n    const mergedTableIndex = GIG2.mergeKeysOnTable(tableIndex);\n\n    const totalRow = GIG2.getTotalRow(mergedTableIndex);\n    const valueKeys = GIG2.getValueKeys(totalRow);\n    const valueSum = GIG2.getValueSum(totalRow);\n\n    const nonOtherValueKeysGlobal = valueKeys.filter(\n      (valueKey) =>\n        totalRow[valueKey] / valueSum >= OTHER_LIMIT_GLOBAL &&\n        valueKey !== KEY_OTHER\n    );\n    const nonOtherValueKeysLocalSet = Object.values(mergedTableIndex).reduce(\n      function (nonOtherValueKeysLocalSet, tableRow) {\n        const tableRowValueSum = GIG2.getValueSum(tableRow);\n        return valueKeys.reduce(function (otherValueKeysLocal, valueKey) {\n          if (\n            tableRow[valueKey] / tableRowValueSum >= OTHER_LIMIT_LOCAL &&\n            valueKey !== KEY_OTHER\n          ) {\n            nonOtherValueKeysLocalSet.add(valueKey);\n          }\n          return nonOtherValueKeysLocalSet;\n        });\n      },\n      new Set(nonOtherValueKeysGlobal)\n    );\n    const nonOtherValueKeys = Array.from(nonOtherValueKeysLocalSet);\n\n    const otherValueKeys = valueKeys.filter(\n      (valueKey) => !nonOtherValueKeysLocalSet.has(valueKey)\n    );\n\n    const sortedNonOtherKeys = nonOtherValueKeys\n      .map(function (key) {\n        return { key, value: totalRow[key] };\n      })\n      .sort((a, b) => b.value - a.value)\n      .map((x) => x.key);\n\n    const expandedTableIndex = Object.entries(mergedTableIndex).reduce(\n      function (expandedTableIndex, [regionID, tableRow]) {\n        expandedTableIndex[regionID] = GIG2.expandOtherOnTableRow(\n          tableRow,\n          sortedNonOtherKeys,\n          otherValueKeys\n        );\n        return expandedTableIndex;\n      },\n      {}\n    );\n    return expandedTableIndex;\n  }\n}\n","import { WWW, StringX } from \"@nuuuwan/utils-js-dev\";\nimport { APP_NAME } from \"../constants/Constants.js\";\n\nexport const REGION_ID_LK = \"LK\";\nexport const ENT = {\n  COUNTRY: \"country\",\n  PROVINCE: \"province\",\n  DISTRICT: \"district\",\n  DSD: \"dsd\",\n  GND: \"gnd\",\n  PD: \"pd\",\n  ED: \"ed\",\n  MOH: \"moh\",\n  LG: \"lg\",\n  UNKNOWN: \"unknown-entity\",\n};\n\nexport const REGION_TYPES = Object.values(ENT);\n\nexport const ENT_TYPE_TO_LONG_NAME = {\n  [ENT.Country]: \"Country\",\n  [ENT.PROVINCE]: \"Province\",\n  [ENT.DISTRICT]: \"District\",\n  [ENT.DSD]: \"Divisional Secretariat Division\",\n  [ENT.GND]: \"Grama Niladhari Division\",\n  [ENT.PD]: \"Polling Division\",\n  [ENT.ED]: \"Electoral District\",\n  [ENT.MOH]: \"Medical Officer of Health Area\",\n  [ENT.LG]: \"Local Authority Area\",\n};\n\nexport const PARENT_TO_CHILD = {\n  [ENT.COUNTRY]: ENT.PROVINCE,\n  [ENT.PROVINCE]: ENT.DISTRICT,\n  [ENT.DISTRICT]: ENT.DSD,\n  [ENT.DSD]: ENT.GND,\n  [ENT.GND]: undefined,\n  [ENT.PD]: undefined,\n  [ENT.ED]: [ENT.PD],\n};\n\nexport default class Ents {\n  static getEntType(entID) {\n    if (entID.substring(0, 2) === \"LK\") {\n      const entIDLength = entID.length;\n      switch (entIDLength) {\n        case 2:\n          return ENT.COUNTRY;\n        case 4:\n          return ENT.PROVINCE;\n        case 5:\n          return ENT.DISTRICT;\n        case 7:\n          return ENT.DSD;\n        case 10:\n          return ENT.GND;\n        default:\n          return ENT.UNKNOWN;\n      }\n    }\n    if (entID.substring(0, 2) === \"EC\") {\n      const entIDLength = entID.length;\n      switch (entIDLength) {\n        case 5:\n          return ENT.ED;\n        case 6:\n          return ENT.PD;\n        default:\n          return ENT.UNKNOWN;\n      }\n    }\n\n    if (entID.substring(0, 2) === \"LG\") {\n      return ENT.LG;\n    }\n\n    if (entID.substring(0, 3) === \"MOH\") {\n      return ENT.MOH;\n    }\n    return ENT.UNKNOWN;\n  }\n  static getRegionName(regionType) {\n    return ENT_TYPE_TO_LONG_NAME[regionType];\n  }\n  static async getEntsByType(entType) {\n    const url = `/${APP_NAME}/data/ents/${entType}.tsv`;\n    return await WWW.tsv(url);\n  }\n\n  static async getEntIndexByType(entType) {\n    const ents = await Ents.getEntsByType(entType);\n    return ents.reduce(function (entIndex, ent) {\n      entIndex[ent.id] = ent;\n      return entIndex;\n    }, {});\n  }\n\n  static async getAllEntIndex() {\n    const entTypes = REGION_TYPES;\n    const entIndexList = await Promise.all(\n      entTypes.map(async function (entType) {\n        return await Ents.getEntIndexByType(entType);\n      })\n    );\n\n    return entTypes.reduce(function (allEntIndex, entType, iEnt) {\n      allEntIndex[entType] = entIndexList[iEnt];\n      return allEntIndex;\n    }, {});\n  }\n\n  static async getEnt(entID) {\n    const entType = Ents.getEntType(entID);\n    const entIndex = await Ents.getEntIndexByType(entType);\n    let ent = entIndex[entID];\n    if (!ent) {\n      return null;\n    }\n    if (ent[\"centroid\"]) {\n      ent[\"centroid\"] = JSON.parse(ent[\"centroid\"]);\n    }\n    return ent;\n  }\n\n  static async getParentToChildMap() {\n    const url = `data/ents/parent_to_child_map.json`;\n    return await WWW.json(url);\n  }\n\n  static getChildType(parentType) {\n    return PARENT_TO_CHILD[parentType];\n  }\n\n  static async getChildIDs(parentID, childRegionType) {\n    const ents = await Ents.getEntsByType(childRegionType);\n    return ents\n      .map((ent) => ent.id)\n      .filter((entID) => entID.includes(parentID) || parentID === \"LK\");\n  }\n\n  static getEntTypeLongName(entType) {\n    return ENT_TYPE_TO_LONG_NAME[entType]\n      ? ENT_TYPE_TO_LONG_NAME[entType]\n      : StringX.toTitleCase(entType);\n  }\n}\n","import { WWW } from \"@nuuuwan/utils-js-dev\";\n\nimport { APP_NAME } from \"../constants/Constants.js\";\nimport Ents, { ENT } from \"./Ents.js\";\nimport GIG2 from \"./GIG2.js\";\nimport { DataStructures } from \"./BaseUtils.js\";\n\nexport default class RegionGroup {\n  static async getMapInfoForCustomMap(mapName) {\n    const url = `/${APP_NAME}/data/custom_maps/${mapName}.json`;\n    const rawInfo = await WWW.json(url);\n\n    const groupToRegions = rawInfo[\"label_to_region_ids\"];\n    const groupIndex = Object.keys(groupToRegions).reduce(function (\n      groupIndex,\n      groupID\n    ) {\n      groupIndex[groupID] = {\n        groupID: groupID,\n        name: groupID,\n      };\n      return groupIndex;\n    },\n    {});\n\n    return {\n      mapID: mapName,\n      name: mapName,\n      groupIndex,\n      groupToRegions,\n    };\n  }\n\n  static async getMapInfoForRegionType(regionType) {\n    const regionEnts = await Ents.getEntsByType(regionType);\n\n    const groupList = regionEnts.map(function (regionEnt) {\n      return {\n        groupID: regionEnt.id,\n        name: regionEnt.name,\n      };\n    });\n\n    const groupIndex = groupList.reduce(function (groupIndex, group) {\n      groupIndex[group.groupID] = group;\n      return groupIndex;\n    }, {});\n\n    const regionIDs = regionEnts\n      .map((regionEnt) => regionEnt.id)\n      .filter(function (regionID) {\n        return regionType !== ENT.PD || regionID.substring(5) !== \"P\";\n      });\n\n    const groupToRegions = regionIDs.reduce(function (\n      groupToRegions,\n      regionID\n    ) {\n      groupToRegions[regionID] = [regionID];\n      return groupToRegions;\n    },\n    {});\n\n    return {\n      mapID: \"region_type_\" + regionType,\n      name: \"By \" + Ents.getEntTypeLongName(regionType),\n      groupIndex,\n      groupToRegions,\n    };\n  }\n\n  static async getMapInfoIndex() {\n    const forRegionTypes = await DataStructures.buildIndex(\n      [ENT.PROVINCE, ENT.DISTRICT, ENT.DSD, ENT.ED, ENT.PD],\n      RegionGroup.getMapInfoForRegionType\n    );\n\n    const forCustomMaps = await DataStructures.buildIndex(\n      [\"sl_new_pds.lk-FINAL.compressed\"],\n      RegionGroup.getMapInfoForCustomMap\n    );\n\n    return Object.assign({}, forRegionTypes, forCustomMaps);\n  }\n\n  static getGroupTableIndex(groupToRegions, activeTableIndex) {\n    const valueKeys = GIG2.getValueKeys(GIG2.getFirstRow(activeTableIndex));\n\n    const rawGroupTableIndex = Object.entries(groupToRegions).reduce(function (\n      groupTableIndex,\n      [groupID, regionIDs]\n    ) {\n      groupTableIndex[groupID] = regionIDs.reduce(function (\n        groupRow,\n        regionID\n      ) {\n        if (!activeTableIndex[regionID]) {\n          return groupRow;\n        }\n        return Object.entries(activeTableIndex[regionID]).reduce(function (\n          groupRow,\n          [key, value]\n        ) {\n          if (valueKeys.includes(key)) {\n            if (!groupRow[key]) {\n              groupRow[key] = value;\n            } else {\n              groupRow[key] += value;\n            }\n          } else {\n            groupRow[key] = value;\n          }\n          return groupRow;\n        },\n        groupRow);\n      },\n      {});\n      return groupTableIndex;\n    },\n    {});\n\n    const groupTableIndex = GIG2.mergeAndExpandOtherOnTable(rawGroupTableIndex);\n\n    return groupTableIndex;\n  }\n}\n","import { Component } from \"react\";\nimport { MapContainer, TileLayer, ZoomControl } from \"react-leaflet\";\n\nimport \"./GeoMap.css\";\n\nconst URL_FORMAT = \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\";\n\nexport default class GeoMap extends Component {\n  render() {\n    const { center, zoom } = this.props;\n    return (\n      <MapContainer center={center} zoom={zoom}>\n        <TileLayer url={URL_FORMAT} />\n        <ZoomControl zoom={zoom} position=\"bottomright\" />\n        {this.props.children}\n      </MapContainer>\n    );\n  }\n}\n","import * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\n\nimport { StringX } from \"@nuuuwan/utils-js-dev\";\n\nimport { Humanize } from \"../../base/BaseUtils.js\";\nimport GIG2 from \"../../base/GIG2.js\";\n\nfunction renderHeaderCell(valueKey) {\n  const style = { fontWeight: 800 };\n  return (\n    <TableCell\n      key={\"header-\" + valueKey}\n      align=\"right\"\n      width=\"30\"\n      style={style}\n    >\n      {StringX.toTitleCase(valueKey)}\n    </TableCell>\n  );\n}\n\nfunction TableCellNumber(props) {\n  const { value, valueSum, valueKey, isMax } = props;\n  const humanizedValue = Humanize.number(value);\n  const humanizedPercent = Humanize.percent(value, valueSum);\n  const p = value / valueSum;\n\n  let backgroundColor = \"white\";\n  let color = \"black\";\n  if (isMax) {\n    backgroundColor = GIG2.getValueKeyColor(valueKey);\n    color = \"white\";\n  }\n\n  let opacity = 0.2;\n  if (p > 0.5) {\n    opacity = p;\n  } else if (p > 0.1) {\n    opacity = 0.5;\n  } else if (p > 0.01) {\n    opacity = 0.4;\n  }\n\n  const styleText = {\n    backgroundColor,\n    opacity,\n    borderRadius: 3,\n    padding: 3,\n  };\n\n  return (\n    <TableCell align=\"right\">\n      <div style={styleText}>\n        <div style={{ fontSize: 15, color }}>{humanizedPercent}</div>\n        <div style={{ fontSize: 9, color }}>{humanizedValue}</div>\n      </div>\n    </TableCell>\n  );\n}\n\nexport default function DataTable(props) {\n  const { groupTableIndex, activeMapColorTableName } = props;\n  const valueKeys = GIG2.getValueKeys(GIG2.getFirstRow(groupTableIndex));\n\n  const title = StringX.toTitleCase(activeMapColorTableName.split(\".\")[1]);\n\n  return (\n    <Box>\n      <Typography variant=\"subtitle1\" component=\"div\">\n        {title}\n      </Typography>\n      <TableContainer\n        sx={{ position: \"absolute\", top: 100, bottom: 20, width: 560 }}\n      >\n        <Table stickyHeader padding=\"none\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"right\" width=\"5\" />\n              <TableCell align=\"right\" width=\"80\" />\n              {valueKeys.map(renderHeaderCell)}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {Object.entries(groupTableIndex).map(function (\n              [groupID, dataRow],\n              iRow\n            ) {\n              const valueSum = GIG2.getValueSum(dataRow);\n              const maxValueKey = GIG2.getMaxValueKey(dataRow);\n              return (\n                <TableRow key={groupID}>\n                  <TableCell>\n                    <Typography variant=\"caption\">{`${iRow + 1}.`}</Typography>\n                  </TableCell>\n                  <TableCell>{groupID}</TableCell>\n                  {valueKeys.map(function (valueKey) {\n                    const isMax = maxValueKey === valueKey;\n                    return (\n                      <TableCellNumber\n                        key={groupID + \"-\" + valueKey}\n                        value={dataRow[valueKey]}\n                        valueSum={valueSum}\n                        valueKey={valueKey}\n                        isMax={isMax}\n                      />\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n}\n","import Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport Paper from \"@mui/material/Paper\";\n\nimport { MathX } from \"@nuuuwan/utils-js-dev\";\n\nimport { Humanize, StatX } from \"../../base/BaseUtils.js\";\n\nconst POP_TABLE_NAME = \"regions.2012_census.ethnicity_of_population\";\nconst POP_FIELD_KEY = \"total_population\";\n\nfunction GroupInfoView(props) {\n  const { region, title } = props;\n  return (\n    <Box key={region.groupID}>\n      <Typography variant=\"h5\">{Humanize.number(region.pop)}</Typography>\n      <Typography variant=\"h7\">{region.groupID}</Typography>\n      <Typography variant=\"caption\">{title}</Typography>\n    </Box>\n  );\n}\n\nfunction PCorrectStats(props) {\n  const { popList, pCorrect } = props;\n\n  const meanPop = StatX.mean(popList);\n  const limitLower = meanPop / (1 + pCorrect);\n  const limitUpper = meanPop * (1 + pCorrect);\n\n  const correctSizeRegions = popList.filter(\n    (pop) => limitLower <= pop && limitUpper >= pop\n  );\n  const nCorrectSizeRegions = correctSizeRegions.length;\n  const nRegions = popList.length;\n\n  return (\n    <>\n      <Box>\n        <Typography variant=\"h5\" display=\"inline\">\n          {Humanize.percent(nCorrectSizeRegions, nRegions)}\n        </Typography>\n        <Typography variant=\"h7\" display=\"inline\">\n          {\" \" + nCorrectSizeRegions}\n        </Typography>\n      </Box>\n      <Typography variant=\"caption\">\n        Regions within {Humanize.percent(pCorrect, 1)} of Mean Population (\n        {Humanize.number(limitLower)} to {Humanize.number(limitUpper)})\n      </Typography>\n    </>\n  );\n}\n\nexport default function MapPropertiesView(props) {\n  const { groupToRegions, tableIndexIndex } = props;\n  const popTableIndex = tableIndexIndex[POP_TABLE_NAME];\n\n  const nRegions = Object.keys(groupToRegions).length;\n\n  const groupInfoList = Object.entries(groupToRegions)\n    .map(function ([groupID, regionIDs]) {\n      const pop = MathX.sum(\n        regionIDs.map(function (regionID) {\n          if (popTableIndex[regionID]) {\n            return parseInt(popTableIndex[regionID][POP_FIELD_KEY]);\n          } else {\n            return 0;\n          }\n        })\n      );\n      return {\n        groupID,\n        pop,\n      };\n    })\n    .sort(function (a, b) {\n      return a.pop - b.pop;\n    });\n\n  const regionMin = groupInfoList[0];\n  const regionMax = groupInfoList[nRegions - 1];\n\n  const popList = groupInfoList.map((groupInfo) => groupInfo.pop);\n\n  const meanPop = StatX.mean(popList);\n  const stdevPop = StatX.stdev(popList);\n\n  return (\n    <Box>\n      <Typography variant=\"h5\">{nRegions}</Typography>\n      <Typography variant=\"caption\">Number of Regions</Typography>\n\n      <Paper sx={{ p: 2 }}>\n        <Typography variant=\"h4\">{\"Population Balance\"}</Typography>\n\n        <Box>\n          <Typography variant=\"h5\" display=\"inline\">\n            {Humanize.number(meanPop)}\n          </Typography>\n          <Typography variant=\"h7\" display=\"inline\">\n            {\" ± \" + Humanize.number(stdevPop * 2)}\n          </Typography>\n        </Box>\n        <Typography variant=\"caption\">\n          Mean Population ± 3 Standard Deviations\n        </Typography>\n\n        <GroupInfoView title=\"Smallest Region\" region={regionMin} />\n        <GroupInfoView title=\"Largest Region\" region={regionMax} />\n\n        <Box>\n          <Typography variant=\"h5\" display=\"inline\">\n            {(regionMax.pop / regionMin.pop).toPrecision(2) + \" : 1\"}\n          </Typography>\n        </Box>\n        <Typography variant=\"caption\">Largest : Smallest</Typography>\n\n        <PCorrectStats popList={popList} pCorrect={0.1} />\n        <PCorrectStats popList={popList} pCorrect={0.2} />\n        <PCorrectStats popList={popList} pCorrect={0.4} />\n      </Paper>\n    </Box>\n  );\n}\n","import { Component } from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport Tab from \"@mui/material/Tab\";\nimport TabContext from \"@mui/lab/TabContext\";\nimport TabList from \"@mui/lab/TabList\";\nimport TabPanel from \"@mui/lab/TabPanel\";\n\nimport DataTable from \"../../nonstate/molecules/DataTable.js\";\nimport MapPropertiesView from \"../../nonstate/molecules/MapPropertiesView.js\";\n\nconst TAB = {\n  MAP_PROPS: \"Map Properties\",\n  DATA: \"Data\",\n};\nconst DEFAULT_TAB = TAB.MAP_PROPS;\n\nexport default class MainPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { activeTab: DEFAULT_TAB };\n  }\n\n  onTabChange(event, newActiveTab) {\n    this.setState({ activeTab: newActiveTab });\n  }\n\n  render() {\n    const {\n      groupToRegions,\n      groupTableIndex,\n      activeMapColorTableName,\n      tableIndexIndex,\n    } = this.props;\n    const { activeTab } = this.state;\n\n    return (\n      <Paper\n        sx={{\n          position: \"absolute\",\n          top: 20,\n          right: 20,\n          bottom: 20,\n          width: 600,\n          zIndex: 1000,\n        }}\n      >\n        <TabContext value={activeTab}>\n          <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n            <TabList\n              onChange={this.onTabChange.bind(this)}\n              aria-label=\"lab API tabs example\"\n            >\n              {Object.values(TAB).map(function (tab) {\n                return <Tab key={tab} label={tab} value={tab} />;\n              })}\n            </TabList>\n          </Box>\n\n          <TabPanel value={TAB.MAP_PROPS}>\n            <MapPropertiesView\n              groupToRegions={groupToRegions}\n              tableIndexIndex={tableIndexIndex}\n            />\n          </TabPanel>\n\n          <TabPanel value={TAB.DATA}>\n            <DataTable\n              groupToRegions={groupToRegions}\n              groupTableIndex={groupTableIndex}\n              activeMapColorTableName={activeMapColorTableName}\n            />\n          </TabPanel>\n        </TabContext>\n      </Paper>\n    );\n  }\n}\n","import { WWW } from \"@nuuuwan/utils-js-dev\";\nimport Ents, { REGION_TYPES } from \"./Ents.js\";\nimport { APP_NAME } from \"../constants/Constants.js\";\n\nexport const DEFAULT_ZOOM = 8;\nexport const DEFAULT_LATLNG = [7.836173, 80.403442];\n\nexport function getDefaultLatLngZoomStr() {\n  return getLatLngZoomStr(DEFAULT_LATLNG, DEFAULT_ZOOM);\n}\n\nexport function getLatLngZoomStr([lat, lng], zoom) {\n  return `${lat}N,${lng}E,${zoom}z`;\n}\n\nexport function parseLatLngZoomStr(locationStr) {\n  const [latStr, lngStr, zoomStr] = locationStr.split(\",\");\n  const lat = parseFloat(latStr.replace(\"N\", \"\"));\n  const lng = parseFloat(lngStr.replace(\"E\", \"\"));\n  const zoom = parseInt(zoomStr.replace(\"z\", \"\"));\n  return { lat, lng, zoom };\n}\n\nexport function getBrowserLatLng(callback) {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      callback([position.coords.latitude, position.coords.longitude]);\n    });\n  } else {\n    callback(DEFAULT_LATLNG);\n  }\n}\n\nfunction isPointInPolygon(point, polygon) {\n  const [y, x] = point;\n  let nIntersects = 0;\n  for (let i in polygon) {\n    const j = (i - 1 + polygon.length) % polygon.length;\n\n    const [xi, yi] = polygon[i];\n    const [xj, yj] = polygon[j];\n\n    // eslint-disable-next-line no-mixed-operators\n    const a = yi > y !== yj > y;\n    // eslint-disable-next-line no-mixed-operators\n    const b = x < ((xj - xi) * (y - yi)) / (yj - yi) + xi;\n\n    const intersect = a && b;\n    if (intersect) {\n      nIntersects += 1;\n    }\n  }\n  return nIntersects % 2 === 1;\n}\n\nfunction isPointInMultiMultiPolygon(point, multiMultiPolygon) {\n  for (let i in multiMultiPolygon) {\n    const multiPolygon = multiMultiPolygon[i];\n    for (let j in multiPolygon) {\n      const polygon = multiPolygon[j];\n      if (isPointInPolygon(point, polygon)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport default class GeoData {\n  static async getCoordinatesForRegion(regionID) {\n    const regionType = Ents.getEntType(regionID);\n    const url = `/${APP_NAME}/data/geo/${regionType}/${regionID}.json`;\n    return await WWW.json(url);\n  }\n\n  static async getRegionToGeo(regionIDs) {\n    const geoDataList = await Promise.all(\n      regionIDs.map(async function (regionID) {\n        return await GeoData.getCoordinatesForRegion(regionID);\n      })\n    );\n\n    return regionIDs.reduce(function (regionToGeo, regionID, iRegion) {\n      regionToGeo[regionID] = geoDataList[iRegion];\n      return regionToGeo;\n    }, {});\n  }\n\n  static async getRegionTree() {\n    const url = `/${APP_NAME}/data/geo/region_tree.json`;\n    return await WWW.json(url);\n  }\n\n  static async isPointInRegion(point, regionID) {\n    const multiPolygon = await GeoData.getCoordinatesForRegion(regionID);\n    return isPointInMultiMultiPolygon(point, multiPolygon);\n  }\n\n  static async getRegionsForPoint(point) {\n    let regionTree = await GeoData.getRegionTree();\n\n    let regionMap = {};\n\n    for (let iRegionType in REGION_TYPES) {\n      const regionType = REGION_TYPES[iRegionType];\n      const regionIDs = Object.keys(regionTree);\n      let isFoundRegion = false;\n      for (let iRegion in regionIDs) {\n        const regionID = regionIDs[iRegion];\n        const _isPointInRegion = await GeoData.isPointInRegion(point, regionID);\n        if (_isPointInRegion) {\n          regionMap[regionType] = regionID;\n          regionTree = regionTree[regionID];\n          isFoundRegion = true;\n        }\n      }\n      if (!isFoundRegion) {\n        break;\n      }\n    }\n    return regionMap;\n  }\n}\n\nexport function roundLatLng(latLng) {\n  const Q = 1000_000;\n  return latLng.map((x) => Math.round(parseFloat(x) * Q) / Q);\n}\n","import { Component } from \"react\";\nimport { GeoJSON, Circle } from \"react-leaflet\";\n\nexport default class RegionView extends Component {\n  render() {\n    const { geoJSON, style, center, radius } = this.props;\n    const showCartogram = true;\n    const onEachFeature = (feature, layer) => {\n      layer.on({\n        click: function (e) {\n          console.debug(\"Not implemented\");\n        },\n      });\n    };\n\n    const renderedCartogram = showCartogram ? (\n      <Circle center={center} radius={radius} pathOptions={style} />\n    ) : null;\n\n    const mapStyle = showCartogram\n      ? {\n          fillColor: style.fillColor,\n          fillOpacity: style.fillOpacity / 5,\n          color: \"rgba(0,0,0,0.2)\",\n          weight: style.weight,\n        }\n      : style;\n\n    return (\n      <>\n        <GeoJSON\n          data={geoJSON}\n          style={mapStyle}\n          onEachFeature={onEachFeature}\n        />\n        {renderedCartogram}\n      </>\n    );\n  }\n}\n","import { Component } from \"react\";\n\nimport * as topojsonClient from \"topojson-client\";\nimport * as topojsonServer from \"topojson-server\";\nimport * as topojsonSimplify from \"topojson-simplify\";\nimport * as d3 from \"d3\";\n\nimport { LRUCache } from \"../../base/BaseUtils.js\";\n\nimport GeoData from \"../../base/GeoData.js\";\nimport RegionView from \"../atoms/RegionView.js\";\n\nconst CACHE_VERSION = \"v5\";\nconst SIMPLIFY_WEIGHT = 0.0000001;\n\nfunction getRadiusFromPop(pop) {\n  return Math.sqrt(pop) * 25;\n}\nconst RADIUS_TO_GEO_UNITS = 0.00001015;\n\nasync function getGroupGeoJSONNoCache(regionIDs) {\n  const geoJSON = await Promise.all(\n    regionIDs.map(async function (regionID) {\n      return {\n        type: \"MultiPolygon\",\n        coordinates: await GeoData.getCoordinatesForRegion(regionID),\n      };\n    })\n  );\n\n  let topoJSON = topojsonServer.topology(geoJSON);\n  if (SIMPLIFY_WEIGHT) {\n    topoJSON = topojsonSimplify.presimplify(topoJSON);\n    topoJSON = topojsonSimplify.simplify(topoJSON, SIMPLIFY_WEIGHT);\n  }\n\n  const mergedGeoJSON = topojsonClient.merge(\n    topoJSON,\n    Object.values(topoJSON.objects)\n  );\n  return mergedGeoJSON;\n}\n\nasync function getGroupGeoJSON(regionIDs) {\n  const cacheKey = regionIDs.join(\":\") + CACHE_VERSION;\n  return await LRUCache.get(cacheKey, async function () {\n    return await getGroupGeoJSONNoCache(regionIDs);\n  });\n}\n\nexport default class MultiRegionView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { groupGeoJSONList: null };\n    this.isComponentMounted = false;\n  }\n\n  async componentDidMount() {\n    this.isComponentMounted = true;\n    const { groupToRegions } = this.props;\n\n    const groupGeoJSONList = await Promise.all(\n      Object.entries(groupToRegions).map(async function ([groupID, regionIDs]) {\n        return await getGroupGeoJSON(regionIDs);\n      })\n    );\n\n    if (this.isComponentMounted) {\n      this.setState({ groupGeoJSONList });\n    }\n  }\n\n  render() {\n    const { groupGeoJSONList } = this.state;\n\n    if (!groupGeoJSONList) {\n      return null;\n    }\n\n    const { groupToRegions, funcGetRegionStyle, funcGetRegionPop } = this.props;\n\n    const groupIDs = Object.keys(groupToRegions);\n\n    const simulation = d3\n      .forceSimulation(groupGeoJSONList)\n      .force(\n        \"x\",\n        d3.forceX((d) => d3.geoCentroid(d)[1])\n      )\n      .force(\n        \"y\",\n        d3.forceY((d) => d3.geoCentroid(d)[0])\n      )\n      .force(\n        \"collide\",\n        d3.forceCollide(\n          (d, i) =>\n            RADIUS_TO_GEO_UNITS *\n            getRadiusFromPop(funcGetRegionPop(groupIDs[i]))\n        )\n      )\n      .stop();\n\n    for (let i = 0; i < 1000; i++) {\n      simulation.tick();\n    }\n\n    const nodes = simulation.nodes();\n\n    return Object.entries(groupToRegions).map(function (\n      [groupID, regionIDs],\n      iGroup\n    ) {\n      const pop = funcGetRegionPop(groupID);\n      const radius = getRadiusFromPop(pop);\n      return (\n        <RegionView\n          key={`group-${groupID}`}\n          geoJSON={groupGeoJSONList[iGroup]}\n          center={[nodes[iGroup].x, nodes[iGroup].y]}\n          style={funcGetRegionStyle(groupID)}\n          radius={radius}\n        />\n      );\n    });\n  }\n}\n","import Paper from \"@mui/material/Paper\";\n\nimport ListSubheader from \"@mui/material/ListSubheader\";\nimport List from \"@mui/material/List\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\n\nimport PeopleAltIcon from \"@mui/icons-material/PeopleAlt\";\nimport BallotIcon from \"@mui/icons-material/Ballot\";\n\nconst PRESIDENTIAL_ELECTION_YEAR_LIST = [\n  2019, 2015, 2010, 2005, 1999, 1994, 1988, 1982,\n];\n\nconst PARLIAMENTARY_ELECTION_YEAR_LIST = [\n  1989, 1994, 2000, 2001, 2004, 2010, 2015, 2020,\n];\n\nexport const COLOR_INFO_LIST = []\n  .concat(\n    // Presidential Elections\n    PRESIDENTIAL_ELECTION_YEAR_LIST.map(function (electionYear) {\n      return {\n        label: `${electionYear} Presidential Election`,\n        tableName: `regions_ec.${electionYear}_election_presidential.result`,\n        Icon: BallotIcon,\n      };\n    }),\n\n    // Parliamentary Elections\n    PARLIAMENTARY_ELECTION_YEAR_LIST.map(function (electionYear) {\n      return {\n        label: `${electionYear} Parliamentary Election`,\n        tableName: `regions_ec.${electionYear}_election_parliamentary.result`,\n        Icon: BallotIcon,\n      };\n    }),\n\n    // 2012 Census\n    [\n      {\n        label: \"Ethnicity\",\n        tableName: \"regions.2012_census.ethnicity_of_population\",\n        Icon: PeopleAltIcon,\n      },\n      {\n        label: \"Religion\",\n        tableName: \"regions.2012_census.religious_affiliation_of_population\",\n        Icon: PeopleAltIcon,\n      },\n    ]\n  )\n  .sort((a, b) => -a.tableName.localeCompare(b.tableName));\n\nexport default function ColorPanel(props) {\n  const { activeMapColorTableName, onClickMapColor } = props;\n\n  function renderListItem({ label, tableName, Icon }) {\n    const selected = activeMapColorTableName === tableName;\n\n    function onClick() {\n      onClickMapColor(tableName);\n    }\n\n    return (\n      <ListItemButton key={label} selected={selected} onClick={onClick}>\n        <ListItemIcon>\n          <Icon />\n        </ListItemIcon>\n        <ListItemText primary={label} />\n      </ListItemButton>\n    );\n  }\n\n  return (\n    <Paper\n      sx={{\n        position: \"absolute\",\n        zIndex: 1000,\n\n        left: 20,\n        bottom: 20,\n\n        width: 300,\n        height: 420,\n        overflow: \"scroll\",\n      }}\n    >\n      <List dense subheader={<ListSubheader>Color Map by</ListSubheader>}>\n        {COLOR_INFO_LIST.map(renderListItem)}\n      </List>\n    </Paper>\n  );\n}\n","import Paper from \"@mui/material/Paper\";\n\nimport ListSubheader from \"@mui/material/ListSubheader\";\nimport List from \"@mui/material/List\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\n\nimport MapIcon from \"@mui/icons-material/Map\";\n\nimport Ents from \"../../base/Ents.js\";\n\nexport default function MapPanel(props) {\n  const { activeMapID, onClickMap, mapInfoIndex } = props;\n\n  function renderListItem(mapID) {\n    const selected = activeMapID === mapID;\n\n    function onClick() {\n      onClickMap(mapID);\n    }\n\n    return (\n      <ListItemButton key={mapID} selected={selected} onClick={onClick}>\n        <ListItemIcon>\n          <MapIcon />\n        </ListItemIcon>\n        <ListItemText primary={Ents.getEntTypeLongName(mapID)} />\n      </ListItemButton>\n    );\n  }\n\n  return (\n    <Paper\n      sx={{\n        position: \"absolute\",\n        zIndex: 1000,\n\n        left: 20,\n        top: 20,\n        width: 200,\n        height: 300,\n      }}\n    >\n      <List dense subheader={<ListSubheader>Split Regions by</ListSubheader>}>\n        {Object.keys(mapInfoIndex).map(renderListItem)}\n      </List>\n    </Paper>\n  );\n}\n","import { Component } from \"react\";\n\nimport { MathX } from \"@nuuuwan/utils-js-dev\";\n\nimport { DataStructures } from \"../../base/BaseUtils.js\";\nimport GIG2 from \"../../base/GIG2.js\";\nimport { ENT } from \"../../base/Ents.js\";\nimport RegionGroup from \"../../base/RegionGroup.js\";\nimport GeoMap from \"../molecules/GeoMap.js\";\nimport MainPanel from \"../molecules/MainPanel.js\";\nimport MultiRegionView from \"../../stateful/molecules/MultiRegionView.js\";\nimport ColorPanel, {\n  COLOR_INFO_LIST,\n} from \"../../nonstate/molecules/ColorPanel.js\";\nimport MapPanel from \"../../nonstate/molecules/MapPanel.js\";\n\nconst DEFAULT_ZOOM = 8;\nconst DEFAULT_LATLNG = [7.9, 81.5];\nconst DEFAULT_MAP_ID = ENT.PROVINCE;\n\nconst TABLE_NAMES = COLOR_INFO_LIST.map((d) => d.tableName);\nconst DEFAULT_TABLE_NAME = TABLE_NAMES[0];\n\nconst BORDER_COLOR = \"white\";\nconst BORDER_WIDTH = 1;\n\nasync function getTableIndexIndex() {\n  return await DataStructures.buildIndex(TABLE_NAMES, GIG2.getTableIndex);\n}\n\nexport default class HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Data\n      activeMapID: DEFAULT_MAP_ID,\n      mapInfoIndex: undefined,\n\n      groupIndex: undefined,\n      activeGroupID: undefined,\n\n      tableIndexIndex: undefined,\n      activeMapColorTableName: DEFAULT_TABLE_NAME,\n    };\n  }\n\n  async componentDidMount() {\n    const { activeMapID, activeMapColorTableName } = this.state;\n    await this.updateMap(activeMapID, activeMapColorTableName);\n  }\n\n  async updateMap(activeMapID, activeMapColorTableName) {\n    let mapInfoIndex = this.state.mapInfoIndex;\n    if (mapInfoIndex === undefined) {\n      mapInfoIndex = await RegionGroup.getMapInfoIndex();\n    }\n\n    const { groupIndex, groupToRegions } = mapInfoIndex[activeMapID];\n    const activeGroupID = Object.keys(groupIndex)[0];\n\n    let tableIndexIndex = this.state.tableIndexIndex;\n    if (tableIndexIndex === undefined) {\n      tableIndexIndex = await getTableIndexIndex();\n    }\n\n    const activeTableIndex = tableIndexIndex[activeMapColorTableName];\n    const groupTableIndex = RegionGroup.getGroupTableIndex(\n      groupToRegions,\n      activeTableIndex\n    );\n\n    this.setState({\n      activeMapID,\n      activeMapColorTableName,\n\n      mapInfoIndex,\n      groupIndex,\n      groupToRegions,\n      activeGroupID,\n      tableIndexIndex,\n      activeTableIndex,\n      groupTableIndex,\n    });\n  }\n\n  async onClickMapColor(activeMapColorTableName) {\n    await this.updateMap(this.state.activeMapID, activeMapColorTableName);\n  }\n  async onClickMap(activeMapID) {\n    await this.updateMap(activeMapID, this.state.activeMapColorTableName);\n  }\n\n  render() {\n    const {\n      groupIndex,\n      groupToRegions,\n      activeGroupID,\n      mapInfoIndex,\n      tableIndexIndex,\n      activeMapColorTableName,\n      activeMapID,\n      activeTableIndex,\n      groupTableIndex,\n    } = this.state;\n\n    if (!groupIndex) {\n      return \"Loading...\";\n    }\n\n    function funcGetRegionStyle(groupID) {\n      const regionRow = groupTableIndex[groupID];\n      let opacity = 0.1;\n      let color = \"gray\";\n\n      if (!regionRow) {\n        return {\n          fillColor: color,\n          fillOpacity: opacity,\n          color: BORDER_COLOR,\n          weight: BORDER_WIDTH,\n        };\n      }\n\n      const maxValueKey = GIG2.getMaxValueKey(regionRow);\n      const maxValueP = GIG2.getValueKeyP(regionRow, maxValueKey);\n\n      opacity = maxValueP;\n      color = GIG2.getTableRowColor(regionRow);\n\n      return {\n        fillColor: color,\n        fillOpacity: opacity,\n        color: BORDER_COLOR,\n        weight: BORDER_WIDTH,\n      };\n    }\n\n    function funcGetRegionPop(groupID) {\n      const regionRow = groupTableIndex[groupID];\n      return MathX.sum(Object.values(regionRow));\n    }\n\n    return (\n      <div>\n        <GeoMap center={DEFAULT_LATLNG} zoom={DEFAULT_ZOOM}>\n          <MultiRegionView\n            key={`multi-region-view-${activeMapID}`}\n            groupToRegions={groupToRegions}\n            activeGroupID={activeGroupID}\n            funcGetRegionStyle={funcGetRegionStyle}\n            funcGetRegionPop={funcGetRegionPop}\n          />\n        </GeoMap>\n        <MapPanel\n          activeMapID={activeMapID}\n          onClickMap={this.onClickMap.bind(this)}\n          mapInfoIndex={mapInfoIndex}\n        />\n        <ColorPanel\n          activeMapColorTableName={activeMapColorTableName}\n          onClickMapColor={this.onClickMapColor.bind(this)}\n        />\n\n        <MainPanel\n          groupIndex={groupIndex}\n          groupToRegions={groupToRegions}\n          activeGroupID={activeGroupID}\n          activeTableIndex={activeTableIndex}\n          activeMapColorTableName={activeMapColorTableName}\n          tableIndexIndex={tableIndexIndex}\n          groupTableIndex={groupTableIndex}\n        />\n      </div>\n    );\n  }\n}\n","import \"./App.css\";\n\nimport HomePage from \"./stateful/pages/HomePage.js\";\n\nfunction App() {\n  return <HomePage />;\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}